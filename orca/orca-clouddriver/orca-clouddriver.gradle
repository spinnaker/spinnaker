/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/gradle/groovy.gradle"
apply from: "$rootDir/../kotlin.gradle"
apply from: "$rootDir/gradle/detekt.gradle"

test {
  useJUnitPlatform()
}

dependencies {
  implementation("com.netflix.frigga:frigga")
  implementation(project(":orca-core"))
  implementation(project(":orca-retrofit"))
  implementation(project(":orca-front50"))
  implementation(project(":orca-api"))
  implementation(project(":orca-bakery"))
  implementation(project(":orca-deploymentmonitor"))
  implementation("io.spinnaker.kork:kork-moniker")
  implementation("io.spinnaker.kork:kork-retrofit")
  implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml")
  implementation("io.kubernetes:client-java")
  implementation("com.amazonaws:aws-java-sdk-lambda")
  implementation("javax.validation:validation-api")
  implementation("org.jetbrains:annotations")
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-guava")

  api("io.spinnaker.kork:kork-web")

  compileOnly("org.projectlombok:lombok")
  annotationProcessor("org.projectlombok:lombok")

  runtimeOnly("org.hibernate.validator:hibernate-validator")

  testImplementation(project(":orca-test"))
  testImplementation(project(":orca-test-groovy"))
  testImplementation(project(":orca-api-tck"))
  testImplementation(project(":orca-queue"))
  testImplementation("com.github.tomakehurst:wiremock-jre8-standalone")
  testImplementation("org.springframework:spring-test")
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("org.assertj:assertj-core")
  testImplementation("org.mockito:mockito-junit-jupiter")
  testImplementation("io.spinnaker.fiat:fiat-core")
  testImplementation "io.spinnaker.kork:kork-test"
  testImplementation("dev.minutest:minutest")
  testImplementation("io.strikt:strikt-core")
  testImplementation("io.mockk:mockk")
  testImplementation("ru.lanwen.wiremock:wiremock-junit5:1.3.1")

  testCompileOnly("org.projectlombok:lombok")
  testAnnotationProcessor("org.projectlombok:lombok")

  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

sourceSets {
  main {
    java { srcDirs = [] }    // no source dirs for the java compiler
    groovy { srcDirs = ["src/main/java", "src/main/groovy"] }  // compile   everything in src/ with groovy
  }
}
