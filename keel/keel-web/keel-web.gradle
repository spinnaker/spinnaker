plugins {
  id("application")
}

apply(plugin: "com.netflix.dgs.codegen")
apply(plugin: "io.spinnaker.package")

repositories {
  mavenCentral() // for graphql-java-extended-scalars
}

generateJava {
  schemaPaths = ["${projectDir}/src/main/resources/schema"]
  packageName = "com.netflix.spinnaker.keel.graphql"
  typeMapping = ["InstantTime": "java.time.Instant", "JSON": "kotlin.Any"]
}

dependencies {
  api(project(":keel-core"))
  api(project(":keel-clouddriver"))
  api(project(":keel-artifact"))
  api(project(":keel-sql"))
  api(project(":keel-docker"))
  api(project(":keel-echo"))
  api(project(":keel-igor"))
  api(project(":keel-lemur"))
  api(project(":keel-notifications"))
  api(project(":keel-front50"))
  api(project(":keel-orca"))

  implementation(project(":keel-bakery-plugin"))
  implementation(project(":keel-ec2-plugin"))
  implementation(project(":keel-titus-plugin"))
  implementation(project(":keel-schema-generator"))
  implementation(project(":keel-scm"))
  implementation(project(":keel-retrofit"))

  implementation("io.spinnaker.kork:kork-web")
  implementation("io.spinnaker.kork:kork-artifacts")
  implementation("org.springframework.boot:spring-boot-starter-actuator")
  implementation("org.springframework.boot:spring-boot-starter-web")
  implementation("org.springframework.security:spring-security-config")
  implementation("io.spinnaker.fiat:fiat-api")
  implementation("io.spinnaker.fiat:fiat-core")
  implementation("net.logstash.logback:logstash-logback-encoder")
  implementation("io.swagger.core.v3:swagger-annotations")
  implementation("org.apache.maven:maven-artifact:3.6.3")
  implementation("io.spinnaker.kork:kork-plugins")
  implementation("com.slack.api:bolt-servlet:1.6.0")
  implementation("com.graphql-java:graphql-java-extended-scalars:16.0.1")

  // DGS dependencies
  implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:4.9.0'))
  implementation("com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter")
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

  runtimeOnly("io.spinnaker.kork:kork-runtime")

  testImplementation(project(":keel-test"))
  testImplementation(project(":keel-core-test"))
  testImplementation(project(":keel-spring-test-support"))
  testImplementation(project(":keel-retrofit"))
  testImplementation(project(":keel-clouddriver"))
  testImplementation("io.strikt:strikt-jackson")
  testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin")
  testImplementation("io.spinnaker.kork:kork-retrofit")
  testImplementation("io.spinnaker.kork:kork-security")
  testImplementation("com.squareup.okhttp3:mockwebserver")
  testImplementation("org.testcontainers:mysql")
  testImplementation("com.networknt:json-schema-validator:1.0.43")
  testImplementation("io.spinnaker.kork:kork-plugins")
  testImplementation("com.graphql-java:graphql-java-extended-scalars:16.0.0")
  testRuntimeOnly(project(":keel-ec2-plugin"))
}

application {
  mainClassName = "com.netflix.spinnaker.keel.MainKt"
  applicationName("keel")
}
