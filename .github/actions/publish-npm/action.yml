name: Publish (npm)
description: Publishes NPM packages for a Spinnaker project
author: jcavanagh

inputs:
  project:
    description: Project to publish
    required: true
  version:
    description: The version to publish
    required: true
  npm-auth-token:
    description: npmjs.org publishing token

runs:
  using: "composite"
  steps:
    - name: Build JS
      env:
        ORG_GRADLE_PROJECT_version: ${{ inputs.version }}
      shell: bash
      run: |
        ./gradlew :${{ inputs.project }}:webpack

    - name: Rewrite package.json files
      shell: bash
      run: |
        # NPM insists on the version being written into package.json
        # Instead of automating PRs to bump versions, just rewrite them in the build workspace and publish that
        rewrite_package_version() {
          echo "Rewriting $1 with version: ${{ inputs.version }} and publishing to registry https://registry.npmjs.org"
          local json=''
          # Set version
          json=$(cat "$1" | jq '.version = "'"${{ inputs.version }}"'"')
          # Set publishing registry
          json=$(echo "$json" | jq '.publishConfig.registry = "https://registry.npmjs.org"')
          echo "$json" > "$1"
        }

        # All non-dependency `package.json` files in the tree must be updated with the synthetic version pre-publish
        for file in $(find ./${{ inputs.project }} -type d -name node_modules -prune -o -name 'package.json' -print); do
          rewrite_package_version "$file"
        done

        git config user.name "spinnakerbot"
        git config user.email "spinnakerbot@spinnaker.io"
        git commit --no-verify -am "Bump to version ${{ inputs.version }}"

    - name: Setup publishing to npmjs.org
      env:
        NODE_ENV: production
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
      shell: bash
      run: |
        npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN

    - name: Lerna Publish
      if: hashFiles(format('{0}/lerna.json', inputs.project)) != ''
      env:
        NODE_ENV: production
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
      shell: bash
      working-directory: ${{ inputs.project }}
      run: npx lerna publish from-package --no-git-reset --force-publish --yes --ignore-scripts

    - name: Non-Lerna Publish
      if: hashFiles(format('{0}/lerna.json', inputs.project)) == ''
      env:
        NODE_ENV: production
        NPM_AUTH_TOKEN: ${{ inputs.npm-auth-token }}
      shell: bash
      working-directory: ${{ inputs.project }}
      run: npm publish
