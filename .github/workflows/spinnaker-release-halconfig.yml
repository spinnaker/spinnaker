name: Spinnaker Halconfig Release
run-name: Spinnaker Halconfig (${{ inputs.project }} ${{ inputs.version }})

on:
  workflow_call:
    inputs:
      project:
        description: Project to publish
        required: true
        type: string
      version:
        description: The version to publish.  Must correspond to a tag `spinnaker-release-<version>`.
        required: true
        type: string

  workflow_dispatch:
    inputs:
      project:
        description: Project to publish
        required: true
        type: string
      version:
        description: The version to publish. Must correspond to a tag `spinnaker-release-<version>`.
        required: true
        type: string

jobs:
  check-preconditions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: spinnaker-release-${{ inputs.version }}

      - name: Exit if not on a release branch
        run: |
          REF="${{ github.ref_name }}"
          
          if  [[ $REF != release-* ]]; then
            echo "Release workflow must be run from a release branch"
            exit 1
          fi

      - name: Generate version to verify
        id: precondition-version
        uses: ./.github/actions/version
        with:
          namespace: spinnaker
          is-release: true
          skip-increment: true
          skip-tag: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check branch matches desired version
        run: |
          REF="${{ github.ref_name }}"
          REQUIRED_REF='release-${{ steps.precondition-version.outputs.release-train-suffixed }}'
          
          if [[ $REF != $REQUIRED_REF ]]; then
            echo "Wrong release branch - please run from $REQUIRED_REF"
            exit 1
          fi

  halconfig:
    runs-on: ubuntu-latest
    needs: check-preconditions
    steps:
      - uses: actions/checkout@v5
        with:
          ref: spinnaker-release-${{ inputs.version }}

      - name: Create Halconfig
        uses: ./.github/actions/publish-halconfig
        with:
          gar-json-key: ${{ secrets.GAR_JSON_KEY }}
          version: ${{ inputs.version }}
          project: ${{ inputs.project }}
