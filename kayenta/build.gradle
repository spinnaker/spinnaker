/*
 * Copyright 2017 Google, Inc.
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id "io.spinnaker.project" apply false
  id 'idea'
}

allprojects {
  apply plugin: "io.spinnaker.project"
}

subprojects { project ->
  group = "io.spinnaker.kayenta"

  configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
      // Patch direct: signalfx-java
      if (details.requested.group == 'com.signalfx.public' &&
          details.requested.name == 'signalfx-java') {
        details.useVersion '1.0.49' // latest stable as of now
      }

      if ((details.requested.group == 'com.amazon.ion' ||
           details.requested.group == 'software.amazon.ion') &&
          details.requested.name == 'ion-java') {
        details.useVersion '1.5.1'
      }

      // Ion Java
      if (details.requested.group == 'com.amazon.ion' &&
          details.requested.name == 'ion-java') {
        details.useVersion '1.10.5'
      }

      // Jinjava
      if (details.requested.group == 'com.hubspot.jinjava' &&
          details.requested.name == 'jinjava') {
        details.useVersion '2.7.5'
      }

      // Json Smart
      if (details.requested.group == 'net.minidev' &&
          details.requested.name == 'json-smart') {
        details.useVersion '2.5.2'
      }

      if (details.requested.group == 'io.netty' &&
          details.requested.name == 'netty-codec') {
        details.useVersion '4.1.125.Final'
      }

      if (details.requested.group == 'io.netty' &&
          details.requested.name == 'netty-codec-http') {
        details.useVersion '4.1.125.Final'
      }

      if (details.requested.group == 'io.netty' &&
          details.requested.name == 'netty-codec-http2') {
        details.useVersion '4.1.124.Final'
      }

      if (details.requested.group == 'org.apache.commons' &&
          details.requested.name == 'commons-lang3') {
        details.useVersion '3.18.0'
      }

      if (details.requested.group == 'org.eclipse.jetty' &&
          details.requested.name == 'jetty-http') {
        details.useVersion '12.0.12'
      }

      // Bouncy Castle
      if (details.requested.group == 'org.bouncycastle' &&
          details.requested.name == 'bcprov-jdk18on') {
        details.useVersion '1.78'
      }
  
      // Commons IO
      if (details.requested.group == 'commons-io' &&
          details.requested.name == 'commons-io') {
        details.useVersion '2.14.0'
      }
  
      // Jackson Core
      if (details.requested.group == 'com.fasterxml.jackson.core' &&
          details.requested.name == 'jackson-core') {
        details.useVersion '2.15.0'
      }
  
      // Logback Core
      if (details.requested.group == 'ch.qos.logback' &&
          details.requested.name == 'logback-core') {
        details.useVersion '1.3.15'
      }
  
      // Logstash Logback Encoder
      if (details.requested.group == 'net.logstash.logback' &&
          details.requested.name == 'logstash-logback-encoder') {
        details.useVersion '7.4' // Latest as of 2025; adjust if needed
      }

      // Commons Lang3
      if (details.requested.group == 'org.apache.commons' &&
          details.requested.name == 'commons-lang3') {
        details.useVersion '3.18.0'
      }
  
      // MySQL Connector/J
      if (details.requested.group == 'com.mysql' &&
          details.requested.name == 'mysql-connector-j') {
        details.useVersion '8.2.0'
      }
  
      // Netty modules
      if (details.requested.group == 'io.netty') {
        if (details.requested.name == 'netty-common' ||
            details.requested.name == 'netty-handler') {
          details.useVersion '4.1.118.Final'
        }
        if (details.requested.name == 'netty-codec-http') {
          details.useVersion '4.1.108.Final'
        }
      }
  
      // PostgreSQL JDBC
      if (details.requested.group == 'org.postgresql' &&
          details.requested.name == 'postgresql') {
        details.useVersion '42.3.9'
      }
  
      // Protobuf Java
      if (details.requested.group == 'com.google.protobuf' &&
          details.requested.name == 'protobuf-java') {
        details.useVersion '3.25.5'
      }
  
      // Reactor Netty HTTP
      if (details.requested.group == 'io.projectreactor.netty' &&
          details.requested.name == 'reactor-netty-http') {
        details.useVersion '1.2.8'
      }
  
      // Jackson Databind (used by signalfx)
      if (details.requested.group == 'com.fasterxml.jackson.core' &&
          details.requested.name == 'jackson-databind') {
        details.useVersion '2.12.7.1'
      }
  
      // Guava
      if (details.requested.group == 'com.google.guava' &&
          details.requested.name == 'guava') {
        details.useVersion '32.1.3-jre'
      }
  
      // HttpClient
      if (details.requested.group == 'org.apache.httpcomponents' &&
          details.requested.name == 'httpclient') {
        details.useVersion '4.5.13'
      }
  
      // Jetty
      if (details.requested.group == 'org.eclipse.jetty') {
        details.useVersion '9.4.52.v20230823'
      }
  
      // SnakeYAML
      if (details.requested.group == 'org.yaml' &&
          details.requested.name == 'snakeyaml') {
        details.useVersion '2.0'
      }
  
      // Spring Framework
      if (details.requested.group == 'org.springframework') {
        if ( details.requested.name == 'spring-webmvc') {
          details.useVersion '5.3.39'
        }
        if (details.requested.name == 'spring-web') {
          details.useVersion '5.3.39'
        }

        if (details.requested.name == 'spring-expression') {
          details.useVersion '5.3.39'
        }
      }
  
      // Spring Security
      if (details.requested.group == 'org.springframework.security') {
        if (details.requested.name == 'spring-security-core') {
          details.useVersion '5.8.16'
        }
        if (details.requested.name == 'spring-security-crypto') {
          details.useVersion '5.8.16'
        }
        if (details.requested.name == 'spring-security-web') {
          details.useVersion '5.8.16'
        }
      }
  
      // Tomcat
      if (details.requested.group == 'org.apache.tomcat.embed') {
        details.useVersion '9.0.108'
      }
    }
  }

  if (name != "kayenta-bom") {
    apply plugin: "java-library"
    apply plugin: "groovy"

    test {
      useJUnitPlatform()
      testLogging {
        exceptionFormat = "full"
      }
      minHeapSize = "512m"
      maxHeapSize = "512m"
    }

    tasks.withType(JavaExec) {
      if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8191'
      }
    }

    configurations.all {
      exclude group: 'org.mortbay.jetty', module: 'servlet-api'
      exclude group: 'javax.servlet', module: 'servlet-api'
      exclude group: 'org.slf4j', module: 'slf4j-log4j12'
      exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
  }

  project.extensions.findByName('license')?.with {
    exclude "**/*.json"
    exclude "**/*.md"
    exclude "**/*.sse"
    exclude "**/*.yml"
  }

  if (name != "kayenta-bom") {
    dependencies {
      constraints {
        api "org.apache.commons:commons-math3:3.6.1"
        api 'org.scala-lang:scala-library-all:2.12.12'
        api 'org.scala-lang:scala-reflect:2.12.12'
        api 'com.typesafe.scala-logging:scala-logging_2.12:3.9.2'
        testImplementation 'org.scalatest:scalatest_2.12:3.0.9'
        testRuntimeOnly 'org.scalatestplus:junit-5-9_2.12:3.2.16.0'
      }
      implementation enforcedPlatform("io.spinnaker.orca:orca-bom")
      compileOnly "org.projectlombok:lombok"
      annotationProcessor platform("io.spinnaker.orca:orca-bom")
      annotationProcessor "org.projectlombok:lombok"
      annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
      testAnnotationProcessor platform("io.spinnaker.orca:orca-bom")
      testAnnotationProcessor "org.projectlombok:lombok"
      testCompileOnly "org.projectlombok:lombok"


      api "org.slf4j:slf4j-api"
      api "org.springframework.boot:spring-boot-starter-web"
      api "io.spinnaker.kork:kork-swagger"
      api "io.spinnaker.orca:orca-core"


      testImplementation "org.springframework.boot:spring-boot-starter-test"
      testImplementation "org.spockframework:spock-core"
      testImplementation "org.spockframework:spock-spring"
      testImplementation "org.springframework:spring-test"
      testImplementation "org.hamcrest:hamcrest-core"
      testRuntimeOnly "cglib:cglib-nodep"
      testRuntimeOnly "org.objenesis:objenesis"
      testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
      testRuntimeOnly "org.junit.vintage:junit-vintage-engine" //Required for spock tests to execute along with junit5 tests
    }
  }

}
