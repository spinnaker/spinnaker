[
  {
    "type": "PIPELINE",
    "id": "01JSDR9Q2VBK2PTRZWKG0F5452",
    "application": "kubernetesapp",
    "name": "bake_and_deploy_manifest",
    "buildTime": 1745292156035,
    "canceled": false,
    "limitConcurrent": true,
    "maxConcurrentExecutions": 0,
    "keepWaitingPipelines": false,
    "stages": [
      {
        "id": "01JSDR9Q4349JK2KW1DYG4MJWQ",
        "refId": "1",
        "type": "deleteManifest",
        "name": "Delete (Manifest)",
        "startTime": 1745292156154,
        "endTime": 1745292156926,
        "status": "SUCCEEDED",
        "context": {
          "app": "kubernetesapp",
          "deploy.account.name": "k8s-local",
          "outputs.createdArtifacts": [],
          "manifestName": "service dev-p01-nginx",
          "kato.task.terminalRetryCount": 0,
          "kato.task.firstNotFoundRetry": -1,
          "mode": "static",
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["service dev-p01-nginx"]
          },
          "outputs.boundArtifacts": [],
          "cloudProvider": "kubernetes",
          "kato.result.expected": true,
          "options": {
            "cascading": true
          },
          "failureMessages": [],
          "deploy.server.groups": {},
          "location": "spinnaker-dev",
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "manifests": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "spinnaker-dev": ["service dev-p01-nginx"]
                  },
                  "boundArtifacts": []
                }
              ],
              "id": "01JSDR9QJ8WJJ259GGFZJ7ZXG1",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesDeleteManifestOperation"
                },
                {
                  "phase": "DELETE_KUBERNETES_MANIFEST",
                  "status": "Starting delete operation in account k8s-local..."
                },
                {
                  "phase": "DELETE_KUBERNETES_MANIFEST",
                  "status": "Looking up resource properties for service..."
                },
                {
                  "phase": "DELETE_KUBERNETES_MANIFEST",
                  "status": "Calling delete operation for resourceKubernetesCoordinates(kind=service, namespace=spinnaker-dev, name=dev-p01-nginx)..."
                },
                {
                  "phase": "DELETE_KUBERNETES_MANIFEST",
                  "status": " delete operation completed successfully for dev-p01-nginx"
                },
                {
                  "phase": "DELETE_KUBERNETES_MANIFEST",
                  "status": " delete operation completed successfully for all applicable resources"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [],
          "kato.last.task.id": {
            "id": "01JSDR9QJ8WJJ259GGFZJ7ZXG1"
          },
          "kato.task.notFoundRetryCount": 0,
          "account": "k8s-local",
          "kato.task.lastStatus": "SUCCEEDED",
          "artifacts": []
        },
        "outputs": {
          "outputs.createdArtifacts": [],
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["service dev-p01-nginx"]
          },
          "outputs.boundArtifacts": [],
          "outputs.manifests": [],
          "artifacts": []
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveTargetManifestTask",
            "name": "resolveTargetManifest",
            "startTime": 1745292156216,
            "endTime": 1745292156337,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.DeleteManifestTask",
            "name": "deleteManifest",
            "startTime": 1745292156396,
            "endTime": 1745292156515,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorDelete",
            "startTime": 1745292156570,
            "endTime": 1745292156687,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1745292156745,
            "endTime": 1745292156863,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": []
      },
      {
        "id": "01JSDR9Q43TWDBZAZH1WA4FPWP",
        "refId": "2",
        "type": "bakeManifest",
        "name": "Bake (Manifest)",
        "startTime": 1745292156982,
        "endTime": 1745292158913,
        "status": "SUCCEEDED",
        "context": {
          "expectedArtifacts": [
            {
              "usePriorArtifact": false,
              "displayName": "baked manifest",
              "useDefaultArtifact": false,
              "defaultArtifact": {
                "customKind": true,
                "id": "75d4bd7b-d49e-451d-a354-74aab195366f"
              },
              "id": "504af956-b5e0-4f76-95dc-2de45af4c26e",
              "matchArtifact": {
                "customKind": false,
                "name": "nginx",
                "artifactAccount": "embedded-artifact",
                "id": "55f282d1-e3c6-4655-b25d-d07ae735473f",
                "type": "embedded/base64"
              }
            }
          ],
          "outputName": "nginx",
          "cloudProvider": "kubernetes",
          "resolvedExpectedArtifacts": [
            {
              "usePriorArtifact": false,
              "useDefaultArtifact": false,
              "defaultArtifact": {
                "customKind": true,
                "metadata": {
                  "id": "75d4bd7b-d49e-451d-a354-74aab195366f"
                }
              },
              "id": "504af956-b5e0-4f76-95dc-2de45af4c26e",
              "boundArtifact": {
                "customKind": false,
                "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
                "metadata": {},
                "name": "nginx",
                "type": "remote/base64"
              },
              "matchArtifact": {
                "customKind": false,
                "metadata": {
                  "id": "55f282d1-e3c6-4655-b25d-d07ae735473f"
                },
                "name": "nginx",
                "artifactAccount": "embedded-artifact",
                "type": "embedded/base64"
              }
            }
          ],
          "namespace": "spinnaker-dev",
          "templateRenderer": "HELM2",
          "overrides": {
            "environment": "dev",
            "nameOverride": "nginx",
            "namespace": "spinnaker-dev",
            "image.repository": "index.docker.io/library"
          },
          "inputArtifacts": [
            {
              "artifact": {
                "name": "nginx",
                "artifactAccount": "helm-apple",
                "id": "858c307c-2b99-4dae-8538-6f3a118e7bcc",
                "type": "helm/chart",
                "version": "0.2.4"
              },
              "account": "helm-apple"
            }
          ],
          "artifacts": [
            {
              "customKind": false,
              "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
              "metadata": {},
              "name": "nginx",
              "type": "remote/base64"
            }
          ]
        },
        "outputs": {
          "cloudProvider": "kubernetes",
          "artifacts": [
            {
              "type": "remote/base64",
              "customKind": false,
              "name": "nginx",
              "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
              "metadata": {}
            }
          ],
          "resolvedExpectedArtifacts": [
            {
              "matchArtifact": {
                "type": "embedded/base64",
                "customKind": false,
                "name": "nginx",
                "metadata": {
                  "id": "55f282d1-e3c6-4655-b25d-d07ae735473f"
                },
                "artifactAccount": "embedded-artifact"
              },
              "usePriorArtifact": false,
              "useDefaultArtifact": false,
              "defaultArtifact": {
                "customKind": true,
                "metadata": {
                  "id": "75d4bd7b-d49e-451d-a354-74aab195366f"
                }
              },
              "id": "504af956-b5e0-4f76-95dc-2de45af4c26e",
              "boundArtifact": {
                "type": "remote/base64",
                "customKind": false,
                "name": "nginx",
                "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
                "metadata": {}
              }
            }
          ]
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.bakery.tasks.manifests.CreateBakeManifestTask",
            "name": "createBake",
            "startTime": 1745292157054,
            "endTime": 1745292158663,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.pipeline.tasks.artifacts.BindProducedArtifactsTask",
            "name": "bindProducedArtifacts",
            "startTime": 1745292158722,
            "endTime": 1745292158849,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["1"]
      },
      {
        "id": "01JSDR9Q436W0720W7JPYFW4DA",
        "refId": "3",
        "type": "deployManifest",
        "name": "Deploy (Manifest)",
        "startTime": 1745292158977,
        "endTime": 1745292165825,
        "status": "SUCCEEDED",
        "context": {
          "deploy.account.name": "k8s-local",
          "outputs.createdArtifacts": [
            {
              "customKind": false,
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/configMap",
              "version": "v000"
            }
          ],
          "namespaceOverride": "spinnaker-dev",
          "source": "artifact",
          "manifestArtifactId": "504af956-b5e0-4f76-95dc-2de45af4c26e",
          "stableManifests": [
            {
              "manifestName": "deployment dev-p01-nginx",
              "location": "spinnaker-dev"
            },
            {
              "manifestName": "configMap dev-p01-nginx-v000",
              "location": "spinnaker-dev"
            },
            {
              "manifestName": "service dev-p01-nginx",
              "location": "spinnaker-dev"
            }
          ],
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "failureMessages": [],
          "trafficManagement": {
            "options": {
              "enableTraffic": false,
              "services": []
            },
            "enabled": false
          },
          "deploy.server.groups": {},
          "kato.last.task.id": {
            "id": "01JSDRA027WV9243E10DMWDSGJ"
          },
          "requiredArtifacts": [],
          "artifacts": [
            {
              "customKind": false,
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/configMap",
              "version": "v000"
            }
          ],
          "kato.task.terminalRetryCount": 0,
          "moniker": {},
          "kato.task.firstNotFoundRetry": -1,
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["deployment dev-p01-nginx", "configMap dev-p01-nginx-v000", "service dev-p01-nginx"]
          },
          "optionalArtifacts": [
            {
              "customKind": false,
              "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
              "metadata": {},
              "name": "nginx",
              "type": "remote/base64"
            }
          ],
          "outputs.boundArtifacts": [
            {
              "customKind": false,
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "dev-p01-nginx",
              "location": "spinnaker-dev",
              "type": "kubernetes/configMap",
              "version": "v000"
            }
          ],
          "manifests": [
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "data": {
                "test.txt": "test",
                "index.html": "<h1>Hello</h1> <p>This is a test here</p>"
              },
              "kind": "ConfigMap"
            },
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "dev-p01-nginx",
                  "release": "nginx"
                },
                "type": "ClusterIP",
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8888,
                    "name": "http",
                    "targetPort": "http"
                  }
                ],
                "clusterIP": ""
              }
            },
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "dev-p01-nginx",
                      "release": "nginx"
                    }
                  },
                  "spec": {
                    "volumes": [
                      {
                        "configMap": {
                          "name": "dev-p01-nginx"
                        },
                        "name": "wwwdata-volume"
                      }
                    ],
                    "containers": [
                      {
                        "image": "index.docker.io/library/nginx:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "dev-p01-nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "http",
                            "containerPort": 80
                          }
                        ],
                        "volumeMounts": [
                          {
                            "mountPath": "/usr/share/nginx/html",
                            "name": "wwwdata-volume"
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "dev-p01-nginx"
                  }
                }
              }
            }
          ],
          "messages": [],
          "failedManifests": [],
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [
                    {
                      "customKind": false,
                      "reference": "dev-p01-nginx",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "dev-p01-nginx",
                      "location": "spinnaker-dev",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "dev-p01-nginx",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "dev-p01-nginx",
                      "location": "spinnaker-dev",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "dev-p01-nginx-v000",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "dev-p01-nginx",
                      "location": "spinnaker-dev",
                      "type": "kubernetes/configMap",
                      "version": "v000"
                    }
                  ],
                  "manifests": [
                    {
                      "metadata": {
                        "uid": "c23e7594-6ba0-408d-abb6-de8375d01ebf",
                        "resourceVersion": "4720",
                        "creationTimestamp": "2025-04-22T03:22:39Z",
                        "name": "dev-p01-nginx",
                        "namespace": "spinnaker-dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "dev-p01-nginx",
                          "artifact.spinnaker.io/location": "spinnaker-dev",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"clusterIP\":\"\",\"ports\":[{\"name\":\"http\",\"port\":8888,\"protocol\":\"TCP\",\"targetPort\":\"http\"}],\"selector\":{\"app\":\"dev-p01-nginx\",\"release\":\"nginx\"},\"type\":\"ClusterIP\"}}\n",
                          "moniker.spinnaker.io/cluster": "service dev-p01-nginx",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "dev-p01-nginx",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp",
                          "release": "nginx",
                          "heritage": "Tiller",
                          "chart": "nginx-0.2.4"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["10.96.150.226"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "dev-p01-nginx",
                          "release": "nginx"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 8888.0,
                            "name": "http",
                            "targetPort": "http"
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "10.96.150.226"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "uid": "43560353-2984-472c-b0f2-e49a355dd236",
                        "resourceVersion": "4596",
                        "creationTimestamp": "2025-04-22T03:21:33Z",
                        "name": "dev-p01-nginx-v000",
                        "namespace": "spinnaker-dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "v000",
                          "artifact.spinnaker.io/name": "dev-p01-nginx",
                          "artifact.spinnaker.io/location": "spinnaker-dev",
                          "artifact.spinnaker.io/type": "kubernetes/configMap",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"index.html\":\"\\u003ch1\\u003eHello\\u003c/h1\\u003e \\u003cp\\u003eThis is a test here\\u003c/p\\u003e\",\"test.txt\":\"test\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/configMap\",\"artifact.spinnaker.io/version\":\"v000\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"configMap dev-p01-nginx\",\"moniker.spinnaker.io/sequence\":\"0\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"moniker.spinnaker.io/sequence\":\"0\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx-v000\",\"namespace\":\"spinnaker-dev\"}}\n",
                          "moniker.spinnaker.io/cluster": "configMap dev-p01-nginx",
                          "moniker.spinnaker.io/sequence": "0",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "dev-p01-nginx",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp",
                          "release": "nginx",
                          "heritage": "Tiller",
                          "chart": "nginx-0.2.4",
                          "moniker.spinnaker.io/sequence": "0"
                        }
                      },
                      "apiVersion": "v1",
                      "data": {
                        "test.txt": "test",
                        "index.html": "<h1>Hello</h1> <p>This is a test here</p>"
                      },
                      "kind": "ConfigMap"
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "300953e6-a536-4f03-88b5-4be14e0d32bf",
                        "resourceVersion": "4638",
                        "creationTimestamp": "2025-04-22T03:21:33Z",
                        "name": "dev-p01-nginx",
                        "namespace": "spinnaker-dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "dev-p01-nginx",
                          "artifact.spinnaker.io/location": "spinnaker-dev",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"dev-p01-nginx\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"release\":\"nginx\"}},\"spec\":{\"containers\":[{\"image\":\"index.docker.io/library/nginx:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"dev-p01-nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/usr/share/nginx/html\",\"name\":\"wwwdata-volume\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"dev-p01-nginx-v000\"},\"name\":\"wwwdata-volume\"}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "dev-p01-nginx",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp",
                          "release": "nginx",
                          "heritage": "Tiller",
                          "chart": "nginx-0.2.4"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "dev-p01-nginx",
                              "artifact.spinnaker.io/location": "spinnaker-dev",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "dev-p01-nginx",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp",
                              "release": "nginx"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "volumes": [
                              {
                                "configMap": {
                                  "defaultMode": 420.0,
                                  "name": "dev-p01-nginx-v000"
                                },
                                "name": "wwwdata-volume"
                              }
                            ],
                            "containers": [
                              {
                                "image": "index.docker.io/library/nginx:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "dev-p01-nginx",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "name": "http",
                                    "containerPort": 80.0
                                  }
                                ],
                                "volumeMounts": [
                                  {
                                    "mountPath": "/usr/share/nginx/html",
                                    "name": "wwwdata-volume"
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "dev-p01-nginx"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 1.0,
                        "readyReplicas": 1.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-04-22T03:21:44Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-04-22T03:21:44Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-04-22T03:21:33Z",
                            "message": "ReplicaSet \"dev-p01-nginx-7c75d9f5c8\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-04-22T03:21:44Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 1.0,
                        "availableReplicas": 1.0,
                        "observedGeneration": 1.0
                      }
                    }
                  ],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "spinnaker-dev": [
                      "deployment dev-p01-nginx",
                      "configMap dev-p01-nginx-v000",
                      "service dev-p01-nginx"
                    ]
                  },
                  "boundArtifacts": [
                    {
                      "customKind": false,
                      "reference": "dev-p01-nginx-v000",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "dev-p01-nginx",
                      "location": "spinnaker-dev",
                      "type": "kubernetes/configMap",
                      "version": "v000"
                    }
                  ]
                }
              ],
              "id": "01JSDR9T9WWKE17EBR7S210RXC",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesDeployManifestOperation"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Beginning deployment of manifests in account k8s-local ..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Sorting manifests by priority..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for configMap..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy order is: configMap dev-p01-nginx, service dev-p01-nginx, deployment dev-p01-nginx"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in configMap dev-p01-nginx..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for configMap..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for configMap..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest configMap dev-p01-nginx with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service dev-p01-nginx..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service dev-p01-nginx with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment dev-p01-nginx..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: [Artifact(type=kubernetes/configMap, customKind=false, name=dev-p01-nginx, version=v000, location=spinnaker-dev, reference=dev-p01-nginx-v000, metadata={account=k8s-local}, artifactAccount=null, provenance=null, uuid=null)]..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment dev-p01-nginx with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Checking if all requested artifacts were bound..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for configMap..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest configMap dev-p01-nginx-v000 to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest configMap dev-p01-nginx-v000 in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service dev-p01-nginx to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service dev-p01-nginx in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment dev-p01-nginx to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment dev-p01-nginx in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for all manifests in account k8s-local"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            },
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {},
                  "boundArtifacts": []
                }
              ],
              "id": "01JSDRA027WV9243E10DMWDSGJ",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesCleanupArtifactsOperation"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [
            {
              "metadata": {
                "uid": "c23e7594-6ba0-408d-abb6-de8375d01ebf",
                "resourceVersion": "4720",
                "creationTimestamp": "2025-04-22T03:22:39Z",
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"clusterIP\":\"\",\"ports\":[{\"name\":\"http\",\"port\":8888,\"protocol\":\"TCP\",\"targetPort\":\"http\"}],\"selector\":{\"app\":\"dev-p01-nginx\",\"release\":\"nginx\"},\"type\":\"ClusterIP\"}}\n",
                  "moniker.spinnaker.io/cluster": "service dev-p01-nginx",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.150.226"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "dev-p01-nginx",
                  "release": "nginx"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8888.0,
                    "name": "http",
                    "targetPort": "http"
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.150.226"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "uid": "43560353-2984-472c-b0f2-e49a355dd236",
                "resourceVersion": "4596",
                "creationTimestamp": "2025-04-22T03:21:33Z",
                "name": "dev-p01-nginx-v000",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "v000",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "artifact.spinnaker.io/type": "kubernetes/configMap",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"index.html\":\"\\u003ch1\\u003eHello\\u003c/h1\\u003e \\u003cp\\u003eThis is a test here\\u003c/p\\u003e\",\"test.txt\":\"test\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/configMap\",\"artifact.spinnaker.io/version\":\"v000\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"configMap dev-p01-nginx\",\"moniker.spinnaker.io/sequence\":\"0\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"moniker.spinnaker.io/sequence\":\"0\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx-v000\",\"namespace\":\"spinnaker-dev\"}}\n",
                  "moniker.spinnaker.io/cluster": "configMap dev-p01-nginx",
                  "moniker.spinnaker.io/sequence": "0",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4",
                  "moniker.spinnaker.io/sequence": "0"
                }
              },
              "apiVersion": "v1",
              "data": {
                "test.txt": "test",
                "index.html": "<h1>Hello</h1> <p>This is a test here</p>"
              },
              "kind": "ConfigMap"
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "300953e6-a536-4f03-88b5-4be14e0d32bf",
                "resourceVersion": "4638",
                "creationTimestamp": "2025-04-22T03:21:33Z",
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"dev-p01-nginx\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"release\":\"nginx\"}},\"spec\":{\"containers\":[{\"image\":\"index.docker.io/library/nginx:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"dev-p01-nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/usr/share/nginx/html\",\"name\":\"wwwdata-volume\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"dev-p01-nginx-v000\"},\"name\":\"wwwdata-volume\"}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "dev-p01-nginx",
                      "artifact.spinnaker.io/location": "spinnaker-dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "dev-p01-nginx",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "release": "nginx"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "volumes": [
                      {
                        "configMap": {
                          "defaultMode": 420.0,
                          "name": "dev-p01-nginx-v000"
                        },
                        "name": "wwwdata-volume"
                      }
                    ],
                    "containers": [
                      {
                        "image": "index.docker.io/library/nginx:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "dev-p01-nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "http",
                            "containerPort": 80.0
                          }
                        ],
                        "volumeMounts": [
                          {
                            "mountPath": "/usr/share/nginx/html",
                            "name": "wwwdata-volume"
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "dev-p01-nginx"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-04-22T03:21:44Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-04-22T03:21:44Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-04-22T03:21:33Z",
                    "message": "ReplicaSet \"dev-p01-nginx-7c75d9f5c8\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-04-22T03:21:44Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            }
          ],
          "kato.task.notFoundRetryCount": 0,
          "skipExpressionEvaluation": false,
          "account": "k8s-local",
          "kato.task.lastStatus": "SUCCEEDED"
        },
        "outputs": {
          "optionalArtifacts": [
            {
              "type": "remote/base64",
              "customKind": false,
              "name": "nginx",
              "reference": "ref://kubernetesapp/b323f5f973e9393855b3af136a9989677d2ea51e64d871f4b50d66a1a92adc7c",
              "metadata": {}
            }
          ],
          "manifests": [
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "data": {
                "test.txt": "test",
                "index.html": "<h1>Hello</h1> <p>This is a test here</p>"
              },
              "kind": "ConfigMap"
            },
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "dev-p01-nginx",
                  "release": "nginx"
                },
                "type": "ClusterIP",
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8888,
                    "name": "http",
                    "targetPort": "http"
                  }
                ],
                "clusterIP": ""
              }
            },
            {
              "metadata": {
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "labels": {
                  "app": "dev-p01-nginx",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "dev-p01-nginx",
                      "release": "nginx"
                    }
                  },
                  "spec": {
                    "volumes": [
                      {
                        "configMap": {
                          "name": "dev-p01-nginx"
                        },
                        "name": "wwwdata-volume"
                      }
                    ],
                    "containers": [
                      {
                        "image": "index.docker.io/library/nginx:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "dev-p01-nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "http",
                            "containerPort": 80
                          }
                        ],
                        "volumeMounts": [
                          {
                            "mountPath": "/usr/share/nginx/html",
                            "name": "wwwdata-volume"
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "dev-p01-nginx"
                  }
                }
              }
            }
          ],
          "requiredArtifacts": [],
          "outputs.createdArtifacts": [
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/configMap",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "v000",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["deployment dev-p01-nginx", "configMap dev-p01-nginx-v000", "service dev-p01-nginx"]
          },
          "outputs.boundArtifacts": [
            {
              "type": "kubernetes/configMap",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "v000",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "outputs.manifests": [
            {
              "metadata": {
                "uid": "c23e7594-6ba0-408d-abb6-de8375d01ebf",
                "resourceVersion": "4720",
                "creationTimestamp": "2025-04-22T03:22:39Z",
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"clusterIP\":\"\",\"ports\":[{\"name\":\"http\",\"port\":8888,\"protocol\":\"TCP\",\"targetPort\":\"http\"}],\"selector\":{\"app\":\"dev-p01-nginx\",\"release\":\"nginx\"},\"type\":\"ClusterIP\"}}\n",
                  "moniker.spinnaker.io/cluster": "service dev-p01-nginx",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.150.226"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "dev-p01-nginx",
                  "release": "nginx"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8888.0,
                    "name": "http",
                    "targetPort": "http"
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.150.226"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "uid": "43560353-2984-472c-b0f2-e49a355dd236",
                "resourceVersion": "4596",
                "creationTimestamp": "2025-04-22T03:21:33Z",
                "name": "dev-p01-nginx-v000",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "v000",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "artifact.spinnaker.io/type": "kubernetes/configMap",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"index.html\":\"\\u003ch1\\u003eHello\\u003c/h1\\u003e \\u003cp\\u003eThis is a test here\\u003c/p\\u003e\",\"test.txt\":\"test\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/configMap\",\"artifact.spinnaker.io/version\":\"v000\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"configMap dev-p01-nginx\",\"moniker.spinnaker.io/sequence\":\"0\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"moniker.spinnaker.io/sequence\":\"0\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx-v000\",\"namespace\":\"spinnaker-dev\"}}\n",
                  "moniker.spinnaker.io/cluster": "configMap dev-p01-nginx",
                  "moniker.spinnaker.io/sequence": "0",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4",
                  "moniker.spinnaker.io/sequence": "0"
                }
              },
              "apiVersion": "v1",
              "data": {
                "test.txt": "test",
                "index.html": "<h1>Hello</h1> <p>This is a test here</p>"
              },
              "kind": "ConfigMap"
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "300953e6-a536-4f03-88b5-4be14e0d32bf",
                "resourceVersion": "4638",
                "creationTimestamp": "2025-04-22T03:21:33Z",
                "name": "dev-p01-nginx",
                "namespace": "spinnaker-dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "dev-p01-nginx",
                  "artifact.spinnaker.io/location": "spinnaker-dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"chart\":\"nginx-0.2.4\",\"heritage\":\"Tiller\",\"release\":\"nginx\"},\"name\":\"dev-p01-nginx\",\"namespace\":\"spinnaker-dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"dev-p01-nginx\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"spinnaker-dev\",\"artifact.spinnaker.io/name\":\"dev-p01-nginx\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment dev-p01-nginx\"},\"labels\":{\"app\":\"dev-p01-nginx\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"release\":\"nginx\"}},\"spec\":{\"containers\":[{\"image\":\"index.docker.io/library/nginx:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"dev-p01-nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/usr/share/nginx/html\",\"name\":\"wwwdata-volume\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"dev-p01-nginx-v000\"},\"name\":\"wwwdata-volume\"}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "dev-p01-nginx",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp",
                  "release": "nginx",
                  "heritage": "Tiller",
                  "chart": "nginx-0.2.4"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "dev-p01-nginx",
                      "artifact.spinnaker.io/location": "spinnaker-dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment dev-p01-nginx",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "dev-p01-nginx",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "release": "nginx"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "volumes": [
                      {
                        "configMap": {
                          "defaultMode": 420.0,
                          "name": "dev-p01-nginx-v000"
                        },
                        "name": "wwwdata-volume"
                      }
                    ],
                    "containers": [
                      {
                        "image": "index.docker.io/library/nginx:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "dev-p01-nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "http",
                            "containerPort": 80.0
                          }
                        ],
                        "volumeMounts": [
                          {
                            "mountPath": "/usr/share/nginx/html",
                            "name": "wwwdata-volume"
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "dev-p01-nginx"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-04-22T03:21:44Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-04-22T03:21:44Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-04-22T03:21:33Z",
                    "message": "ReplicaSet \"dev-p01-nginx-7c75d9f5c8\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-04-22T03:21:44Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            }
          ],
          "artifacts": [
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/configMap",
              "customKind": false,
              "name": "dev-p01-nginx",
              "version": "v000",
              "location": "spinnaker-dev",
              "reference": "dev-p01-nginx-v000",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ]
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveDeploySourceManifestTask",
            "name": "resolveDeploySourceManifest",
            "startTime": 1745292159038,
            "endTime": 1745292159160,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.DeployManifestTask",
            "name": "deployManifest",
            "startTime": 1745292159218,
            "endTime": 1745292159333,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.MonitorDeployManifestTask",
            "name": "monitorDeploy",
            "startTime": 1745292159387,
            "endTime": 1745292164530,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1745292164590,
            "endTime": 1745292164721,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "5",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.WaitForManifestStableTask",
            "name": "waitForManifestToStabilize",
            "startTime": 1745292164778,
            "endTime": 1745292165061,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "6",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.artifacts.CleanupArtifactsTask",
            "name": "cleanupArtifacts",
            "startTime": 1745292165119,
            "endTime": 1745292165232,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "7",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorCleanup",
            "startTime": 1745292165290,
            "endTime": 1745292165401,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "8",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1745292165458,
            "endTime": 1745292165582,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "9",
            "implementingClass": "com.netflix.spinnaker.orca.pipeline.tasks.artifacts.BindProducedArtifactsTask",
            "name": "bindProducedArtifacts",
            "startTime": 1745292165640,
            "endTime": 1745292165763,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["2"]
      },
      {
        "id": "01JSDR9Q43ST18YAFREXR83TWB",
        "refId": "4",
        "type": "rollingRestartManifest",
        "name": "Rollout Restart (Manifest)",
        "startTime": 1745292165888,
        "endTime": 1745292166477,
        "status": "SUCCEEDED",
        "context": {
          "app": "kubernetesapp",
          "outputs.createdArtifacts": [],
          "manifest.account.name": "k8s-local",
          "manifestName": "deployment dev-p01-nginx",
          "kato.task.terminalRetryCount": 0,
          "kato.task.firstNotFoundRetry": -1,
          "mode": "static",
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["deployment dev-p01-nginx"]
          },
          "manifest.location": "spinnaker-dev",
          "outputs.boundArtifacts": [],
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "failureMessages": [],
          "manifest.name": "deployment dev-p01-nginx",
          "deploy.server.groups": {},
          "location": "spinnaker-dev",
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "manifests": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "spinnaker-dev": ["deployment dev-p01-nginx"]
                  },
                  "boundArtifacts": []
                }
              ],
              "id": "01JSDRA0WH9CSQV9W7K7G5J6DV",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesRollingRestartManifestOperation"
                },
                {
                  "phase": "ROLLING_RESTART_KUBERNETES_MANIFEST",
                  "status": "Starting rolling restart operation in account k8s-local..."
                },
                {
                  "phase": "ROLLING_RESTART_KUBERNETES_MANIFEST",
                  "status": "Looking up resource properties..."
                },
                {
                  "phase": "ROLLING_RESTART_KUBERNETES_MANIFEST",
                  "status": "Calling rolling restart operation fordev-p01-nginx in namespace dev-p01-nginx..."
                },
                {
                  "phase": "ROLLING_RESTART_KUBERNETES_MANIFEST",
                  "status": "Rolling rollout operation completed successfully"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [],
          "kato.last.task.id": {
            "id": "01JSDRA0WH9CSQV9W7K7G5J6DV"
          },
          "kato.task.notFoundRetryCount": 0,
          "account": "k8s-local",
          "kato.task.lastStatus": "SUCCEEDED",
          "artifacts": []
        },
        "outputs": {
          "outputs.createdArtifacts": [],
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["deployment dev-p01-nginx"]
          },
          "outputs.boundArtifacts": [],
          "outputs.manifests": [],
          "artifacts": []
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.RollingRestartManifestTask",
            "name": "rollingRestartManifest",
            "startTime": 1745292165951,
            "endTime": 1745292166077,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorRollingRestart",
            "startTime": 1745292166132,
            "endTime": 1745292166244,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteManifestKatoOutputs",
            "startTime": 1745292166303,
            "endTime": 1745292166421,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["3"]
      },
      {
        "id": "01JSDR9Q43QX9QS8XX4SPK0FFA",
        "refId": "5",
        "type": "scaleManifest",
        "name": "Scale (Manifest)",
        "startTime": 1745292166535,
        "endTime": 1745292172450,
        "status": "SUCCEEDED",
        "context": {
          "app": "kubernetesapp",
          "replicas": 5,
          "manifest.account.name": "k8s-local",
          "manifestName": "deployment dev-p01-nginx",
          "kato.task.terminalRetryCount": 0,
          "kato.task.firstNotFoundRetry": -1,
          "mode": "static",
          "outputs.manifestNamesByNamespace": {
            "spinnaker-dev": ["deployment dev-p01-nginx"]
          },
          "stableManifests": [
            {
              "manifestName": "deployment dev-p01-nginx",
              "location": "spinnaker-dev"
            }
          ],
          "manifest.location": "spinnaker-dev",
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "manifest.name": "deployment dev-p01-nginx",
          "deploy.server.groups": {},
          "messages": [
            "'deployment dev-p01-nginx' in 'spinnaker-dev' for account k8s-local: waiting for manifest to stabilize"
          ],
          "failedManifests": [],
          "location": "spinnaker-dev",
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [],
              "id": "01JSDRA1NBCFSQQXF10RZ19PA0",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesScaleManifestOperation"
                },
                {
                  "phase": "SCALE_KUBERNETES_MANIFEST",
                  "status": "Starting scale operation in account k8s-local..."
                },
                {
                  "phase": "SCALE_KUBERNETES_MANIFEST",
                  "status": "Looking up resource properties..."
                },
                {
                  "phase": "SCALE_KUBERNETES_MANIFEST",
                  "status": "Calling scale operation for dev-p01-nginx in namespace dev-p01-nginx with replicas 5..."
                },
                {
                  "phase": "SCALE_KUBERNETES_MANIFEST",
                  "status": "Scale operation completed successfully"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "kato.last.task.id": {
            "id": "01JSDRA1NBCFSQQXF10RZ19PA0"
          },
          "kato.task.notFoundRetryCount": 0,
          "account": "k8s-local",
          "kato.task.lastStatus": "SUCCEEDED"
        },
        "outputs": {},
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveTargetManifestTask",
            "name": "resolveTargetManifest",
            "startTime": 1745292166592,
            "endTime": 1745292166702,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ScaleManifestTask",
            "name": "scaleManifest",
            "startTime": 1745292166761,
            "endTime": 1745292166871,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorScale",
            "startTime": 1745292166929,
            "endTime": 1745292167045,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.WaitForManifestStableTask",
            "name": "waitForManifestToStabilize",
            "startTime": 1745292167103,
            "endTime": 1745292172391,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["4"]
      }
    ],
    "startTime": 1745292156092,
    "endTime": 1745292172510,
    "status": "SUCCEEDED",
    "authentication": {
      "user": "anonymous",
      "allowedAccounts": [
        "docker-registry-spinnaker",
        "docker-registry-clouddriver",
        "docker-registry-echo",
        "docker-registry-orca",
        "k8s-local"
      ]
    },
    "origin": "api",
    "trigger": {
      "type": "manual",
      "user": "anonymous",
      "parameters": {},
      "artifacts": [],
      "notifications": [],
      "rebake": false,
      "dryRun": false,
      "strategy": false,
      "resolvedExpectedArtifacts": [],
      "expectedArtifacts": [],
      "executionId": "01JSDR9Q2VBK2PTRZWKG0F5452",
      "eventId": "bb21aac4-892a-4a87-b100-ada3f0c32236",
      "enabled": false,
      "preferred": false
    },
    "pipelineConfigId": "da637be2-8219-4fb4-a118-aa685837ebdd",
    "notifications": [],
    "initialConfig": {},
    "systemNotifications": [],
    "spelEvaluator": "v4",
    "templateVariables": {}
  },
  {
    "type": "PIPELINE",
    "id": "01K2E9X5PJZJC5GAE8METBZXS9",
    "application": "kubernetesapp",
    "name": "deployment",
    "buildTime": 1754974295780,
    "canceled": false,
    "limitConcurrent": true,
    "maxConcurrentExecutions": 0,
    "keepWaitingPipelines": false,
    "stages": [
      {
        "id": "01K2E9X5Q4EPJ0K5E48HVEHJ57",
        "refId": "1",
        "type": "deployManifest",
        "name": "Deploy (Manifest)",
        "startTime": 1754974295883,
        "endTime": 1754974303114,
        "status": "SUCCEEDED",
        "context": {
          "deploy.account.name": "k8s-local",
          "outputs.createdArtifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "dev",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "dev",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/statefulSet",
              "version": ""
            }
          ],
          "namespaceOverride": "dev",
          "source": "text",
          "stableManifests": [
            {
              "manifestName": "ingress backend",
              "location": "dev"
            },
            {
              "manifestName": "deployment backend",
              "location": "dev"
            },
            {
              "manifestName": "daemonSet daemonset",
              "location": "dev"
            },
            {
              "manifestName": "statefulSet statefulset",
              "location": "dev"
            },
            {
              "manifestName": "deployment database",
              "location": "dev"
            },
            {
              "manifestName": "deployment frontend",
              "location": "dev"
            },
            {
              "manifestName": "service backend",
              "location": "dev"
            },
            {
              "manifestName": "networkPolicy backend-security-policy",
              "location": "dev"
            },
            {
              "manifestName": "service statefulset",
              "location": "dev"
            }
          ],
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "failureMessages": [],
          "trafficManagement": {
            "options": {
              "enableTraffic": false,
              "services": []
            },
            "enabled": false
          },
          "deploy.server.groups": {},
          "kato.last.task.id": {
            "id": "01K2E9XC87GNZTBCHPW4A5KSDY"
          },
          "requiredArtifacts": [],
          "artifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "dev",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "dev",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/statefulSet",
              "version": ""
            }
          ],
          "kato.task.terminalRetryCount": 0,
          "moniker": {
            "app": "kubernetesapp"
          },
          "kato.task.firstNotFoundRetry": -1,
          "outputs.manifestNamesByNamespace": {
            "dev": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "optionalArtifacts": [],
          "outputs.boundArtifacts": [],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "messages": [],
          "failedManifests": [],
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "dev",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "frontend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "frontend",
                      "location": "dev",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "database",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "database",
                      "location": "dev",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "dev",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "dev",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "daemonset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "daemonset",
                      "location": "dev",
                      "type": "kubernetes/daemonSet",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "dev",
                      "type": "kubernetes/ingress",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend-security-policy",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend-security-policy",
                      "location": "dev",
                      "type": "kubernetes/networkPolicy",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "dev",
                      "type": "kubernetes/statefulSet",
                      "version": ""
                    }
                  ],
                  "manifests": [
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "05ae8de1-67a6-4f9f-a901-8d7066635905",
                        "resourceVersion": "1924",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "frontend",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "frontend",
                          "artifact.spinnaker.io/location": "dev",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment frontend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "frontend",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "frontend",
                              "artifact.spinnaker.io/location": "dev",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment frontend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "frontend",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "frontend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 1.0,
                        "readyReplicas": 1.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-11T22:53:11Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-11T22:53:11Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-11T22:52:14Z",
                            "message": "ReplicaSet \"frontend-5b94cfdd4c\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-11T22:53:11Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 1.0,
                        "availableReplicas": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "uid": "9662019c-9a0f-4fbd-8ecb-3a84e16876d2",
                        "resourceVersion": "1759",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "statefulset",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "statefulset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["None"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "statefulset"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "name": "web",
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "None"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "06bbeb61-cadf-4bb3-a696-fa066a1e941d",
                        "resourceVersion": "1896",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "database",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "database",
                          "artifact.spinnaker.io/location": "dev",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment database",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "db",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "database",
                              "artifact.spinnaker.io/location": "dev",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment database",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "db",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "mysql",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "database",
                                "resources": {},
                                "env": [
                                  {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "rootpassword"
                                  }
                                ],
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 3306.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 1.0,
                        "readyReplicas": 1.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-11T22:52:56Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-11T22:52:56Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-11T22:52:14Z",
                            "message": "ReplicaSet \"database-cb985c8d8\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-11T22:52:56Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 1.0,
                        "availableReplicas": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "052a053f-9123-48ab-8ef8-24b53e09e83a",
                        "resourceVersion": "1958",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "backend",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "dev",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment backend",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "backend",
                              "artifact.spinnaker.io/location": "dev",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment backend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "backend",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp",
                              "custom-label": "custom-value"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:1.27.3",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "backend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 2.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 2.0,
                        "readyReplicas": 2.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-11T22:53:23Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-11T22:53:23Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-11T22:52:14Z",
                            "message": "ReplicaSet \"backend-65b97dd546\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-11T22:53:23Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 2.0,
                        "availableReplicas": 2.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "0b6cd9b8-3248-417b-b41f-5b7ff9f98b4e",
                        "resourceVersion": "1757",
                        "creationTimestamp": "2025-08-11T22:52:13Z",
                        "name": "backend",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/ingress",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                          "moniker.spinnaker.io/cluster": "ingress backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "Ingress",
                      "spec": {
                        "rules": [
                          {
                            "host": "backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "backend"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          },
                          {
                            "host": "api.backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "workload-service"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "6ca0f6b5-aa44-4912-a693-abfab2cb5ab6",
                        "resourceVersion": "1758",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "backend-security-policy",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend-security-policy",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"dev\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                          "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "NetworkPolicy",
                      "spec": {
                        "ingress": [
                          {
                            "from": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "frontend"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 80.0
                              }
                            ]
                          }
                        ],
                        "podSelector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "policyTypes": ["Ingress", "Egress"],
                        "egress": [
                          {
                            "to": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "db"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 3306.0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "3cb4249d-bf16-4a55-b0c6-e9d59fc9e4e9",
                        "resourceVersion": "1982",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "daemonset",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "daemonset",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"dev\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                          "deprecated.daemonset.template.generation": "1",
                          "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "daemonset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "DaemonSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "daemonset",
                              "artifact.spinnaker.io/location": "dev",
                              "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                              "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "daemonset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "daemonset",
                                "readinessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "resources": {
                                  "requests": {
                                    "memory": "64Mi",
                                    "cpu": "250m"
                                  },
                                  "limits": {
                                    "memory": "128Mi",
                                    "cpu": "500m"
                                  }
                                },
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": 0.0,
                            "maxUnavailable": 1.0
                          }
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "daemonset"
                          }
                        }
                      },
                      "status": {
                        "updatedNumberScheduled": 1.0,
                        "numberAvailable": 1.0,
                        "numberMisscheduled": 0.0,
                        "numberReady": 1.0,
                        "currentNumberScheduled": 1.0,
                        "desiredNumberScheduled": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "76ab2b2a-7486-4268-8ab8-7a9836f810e2",
                        "resourceVersion": "2101",
                        "creationTimestamp": "2025-08-11T22:52:14Z",
                        "name": "statefulset",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                          "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "StatefulSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "statefulset",
                              "artifact.spinnaker.io/location": "dev",
                              "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                              "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "statefulset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 10.0,
                            "containers": [
                              {
                                "image": "registry.k8s.io/nginx-slim:0.24",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "nginx",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "name": "web",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "podManagementPolicy": "OrderedReady",
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "partition": 0.0
                          }
                        },
                        "replicas": 3.0,
                        "persistentVolumeClaimRetentionPolicy": {
                          "whenScaled": "Retain",
                          "whenDeleted": "Retain"
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "statefulset"
                          }
                        },
                        "minReadySeconds": 10.0,
                        "serviceName": ""
                      },
                      "status": {
                        "currentRevision": "statefulset-5c84d6b8d8",
                        "replicas": 3.0,
                        "updateRevision": "statefulset-5c84d6b8d8",
                        "readyReplicas": 3.0,
                        "collisionCount": 0.0,
                        "currentReplicas": 3.0,
                        "updatedReplicas": 3.0,
                        "availableReplicas": 3.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "uid": "d4f848d1-d491-42e8-9d70-9449b8612d1f",
                        "resourceVersion": "1754",
                        "creationTimestamp": "2025-08-11T22:52:13Z",
                        "name": "backend",
                        "namespace": "dev",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "dev",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["10.96.99.24"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "backend"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "10.96.99.24"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    }
                  ],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "dev": [
                      "ingress backend",
                      "deployment backend",
                      "daemonSet daemonset",
                      "statefulSet statefulset",
                      "deployment database",
                      "deployment frontend",
                      "service backend",
                      "networkPolicy backend-security-policy",
                      "service statefulset"
                    ]
                  },
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9X65BZ35HHZQ95SDDWDXN",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesDeployManifestOperation"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Beginning deployment of manifests in account k8s-local ..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Sorting manifests by priority..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy order is: service backend, ingress backend, networkPolicy backend-security-policy, service statefulset, deployment backend, deployment frontend, deployment database, daemonSet daemonset, statefulSet statefulset"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in ingress backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest ingress backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in networkPolicy backend-security-policy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest networkPolicy backend-security-policy with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment frontend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment frontend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment database..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment database with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in daemonSet daemonset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest daemonSet daemonset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in statefulSet statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest statefulSet statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Checking if all requested artifacts were bound..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest ingress backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest ingress backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest networkPolicy backend-security-policy to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest networkPolicy backend-security-policy in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment frontend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment frontend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment database to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment database in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest daemonSet daemonset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest daemonSet daemonset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest statefulSet statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest statefulSet statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for all manifests in account k8s-local"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            },
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {},
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9XC87GNZTBCHPW4A5KSDY",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesCleanupArtifactsOperation"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [
            {
              "metadata": {
                "generation": 1.0,
                "uid": "05ae8de1-67a6-4f9f-a901-8d7066635905",
                "resourceVersion": "1924",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "frontend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:53:11Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:53:11Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"frontend-5b94cfdd4c\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:53:11Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "9662019c-9a0f-4fbd-8ecb-3a84e16876d2",
                "resourceVersion": "1759",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "statefulset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "06bbeb61-cadf-4bb3-a696-fa066a1e941d",
                "resourceVersion": "1896",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "database",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:56Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:52:56Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"database-cb985c8d8\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:52:56Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "052a053f-9123-48ab-8ef8-24b53e09e83a",
                "resourceVersion": "1958",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 2.0,
                "readyReplicas": 2.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:53:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:53:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"backend-65b97dd546\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:53:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 2.0,
                "availableReplicas": 2.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0b6cd9b8-3248-417b-b41f-5b7ff9f98b4e",
                "resourceVersion": "1757",
                "creationTimestamp": "2025-08-11T22:52:13Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "6ca0f6b5-aa44-4912-a693-abfab2cb5ab6",
                "resourceVersion": "1758",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "backend-security-policy",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"dev\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "3cb4249d-bf16-4a55-b0c6-e9d59fc9e4e9",
                "resourceVersion": "1982",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "daemonset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"dev\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "updatedNumberScheduled": 1.0,
                "numberAvailable": 1.0,
                "numberMisscheduled": 0.0,
                "numberReady": 1.0,
                "currentNumberScheduled": 1.0,
                "desiredNumberScheduled": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "76ab2b2a-7486-4268-8ab8-7a9836f810e2",
                "resourceVersion": "2101",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "statefulset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "currentRevision": "statefulset-5c84d6b8d8",
                "replicas": 3.0,
                "updateRevision": "statefulset-5c84d6b8d8",
                "readyReplicas": 3.0,
                "collisionCount": 0.0,
                "currentReplicas": 3.0,
                "updatedReplicas": 3.0,
                "availableReplicas": 3.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "d4f848d1-d491-42e8-9d70-9449b8612d1f",
                "resourceVersion": "1754",
                "creationTimestamp": "2025-08-11T22:52:13Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.99.24"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.99.24"
              },
              "status": {
                "loadBalancer": {}
              }
            }
          ],
          "kato.task.notFoundRetryCount": 0,
          "skipExpressionEvaluation": false,
          "account": "k8s-local",
          "kato.task.lastStatus": "SUCCEEDED"
        },
        "outputs": {
          "optionalArtifacts": [],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "requiredArtifacts": [],
          "outputs.createdArtifacts": [
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "dev",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "dev",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "dev",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "dev",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "outputs.manifestNamesByNamespace": {
            "dev": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "outputs.boundArtifacts": [],
          "outputs.manifests": [
            {
              "metadata": {
                "generation": 1.0,
                "uid": "05ae8de1-67a6-4f9f-a901-8d7066635905",
                "resourceVersion": "1924",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "frontend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:53:11Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:53:11Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"frontend-5b94cfdd4c\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:53:11Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "9662019c-9a0f-4fbd-8ecb-3a84e16876d2",
                "resourceVersion": "1759",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "statefulset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "06bbeb61-cadf-4bb3-a696-fa066a1e941d",
                "resourceVersion": "1896",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "database",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:56Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:52:56Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"database-cb985c8d8\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:52:56Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "052a053f-9123-48ab-8ef8-24b53e09e83a",
                "resourceVersion": "1958",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 2.0,
                "readyReplicas": 2.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-11T22:53:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-11T22:53:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-11T22:52:14Z",
                    "message": "ReplicaSet \"backend-65b97dd546\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-11T22:53:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 2.0,
                "availableReplicas": 2.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0b6cd9b8-3248-417b-b41f-5b7ff9f98b4e",
                "resourceVersion": "1757",
                "creationTimestamp": "2025-08-11T22:52:13Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "6ca0f6b5-aa44-4912-a693-abfab2cb5ab6",
                "resourceVersion": "1758",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "backend-security-policy",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"dev\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "3cb4249d-bf16-4a55-b0c6-e9d59fc9e4e9",
                "resourceVersion": "1982",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "daemonset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"dev\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "updatedNumberScheduled": 1.0,
                "numberAvailable": 1.0,
                "numberMisscheduled": 0.0,
                "numberReady": 1.0,
                "currentNumberScheduled": 1.0,
                "desiredNumberScheduled": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "76ab2b2a-7486-4268-8ab8-7a9836f810e2",
                "resourceVersion": "2101",
                "creationTimestamp": "2025-08-11T22:52:14Z",
                "name": "statefulset",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"dev\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "dev",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "currentRevision": "statefulset-5c84d6b8d8",
                "replicas": 3.0,
                "updateRevision": "statefulset-5c84d6b8d8",
                "readyReplicas": 3.0,
                "collisionCount": 0.0,
                "currentReplicas": 3.0,
                "updatedReplicas": 3.0,
                "availableReplicas": 3.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "d4f848d1-d491-42e8-9d70-9449b8612d1f",
                "resourceVersion": "1754",
                "creationTimestamp": "2025-08-11T22:52:13Z",
                "name": "backend",
                "namespace": "dev",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "dev",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"dev\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"dev\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.99.24"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.99.24"
              },
              "status": {
                "loadBalancer": {}
              }
            }
          ],
          "artifacts": [
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "dev",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "dev",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "dev",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "dev",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ]
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveDeploySourceManifestTask",
            "name": "resolveDeploySourceManifest",
            "startTime": 1754974295944,
            "endTime": 1754974296068,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.DeployManifestTask",
            "name": "deployManifest",
            "startTime": 1754974296132,
            "endTime": 1754974296300,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.MonitorDeployManifestTask",
            "name": "monitorDeploy",
            "startTime": 1754974296355,
            "endTime": 1754974301528,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974301590,
            "endTime": 1754974301723,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "5",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.WaitForManifestStableTask",
            "name": "waitForManifestToStabilize",
            "startTime": 1754974301793,
            "endTime": 1754974302340,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "6",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.artifacts.CleanupArtifactsTask",
            "name": "cleanupArtifacts",
            "startTime": 1754974302399,
            "endTime": 1754974302520,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "7",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorCleanup",
            "startTime": 1754974302581,
            "endTime": 1754974302696,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "8",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974302755,
            "endTime": 1754974302880,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "9",
            "implementingClass": "com.netflix.spinnaker.orca.pipeline.tasks.artifacts.BindProducedArtifactsTask",
            "name": "bindProducedArtifacts",
            "startTime": 1754974302933,
            "endTime": 1754974303054,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": []
      },
      {
        "id": "01K2E9X5Q442T66TH92K07M4EG",
        "refId": "2",
        "type": "deployManifest",
        "name": "Deploy (Manifest)",
        "startTime": 1754974303175,
        "endTime": 1754974310291,
        "status": "SUCCEEDED",
        "context": {
          "deploy.account.name": "k8s-local",
          "outputs.createdArtifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "test",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "test",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/statefulSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            }
          ],
          "namespaceOverride": "test",
          "source": "text",
          "stableManifests": [
            {
              "manifestName": "ingress backend",
              "location": "test"
            },
            {
              "manifestName": "deployment backend",
              "location": "test"
            },
            {
              "manifestName": "daemonSet daemonset",
              "location": "test"
            },
            {
              "manifestName": "statefulSet statefulset",
              "location": "test"
            },
            {
              "manifestName": "deployment database",
              "location": "test"
            },
            {
              "manifestName": "deployment frontend",
              "location": "test"
            },
            {
              "manifestName": "service backend",
              "location": "test"
            },
            {
              "manifestName": "networkPolicy backend-security-policy",
              "location": "test"
            },
            {
              "manifestName": "service statefulset",
              "location": "test"
            }
          ],
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "failureMessages": [],
          "trafficManagement": {
            "options": {
              "enableTraffic": false,
              "services": []
            },
            "enabled": false
          },
          "deploy.server.groups": {},
          "kato.last.task.id": {
            "id": "01K2E9XK7VDF8DCD2XCHCMPHDK"
          },
          "requiredArtifacts": [],
          "artifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "test",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "test",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/statefulSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            }
          ],
          "kato.task.terminalRetryCount": 0,
          "moniker": {
            "app": "kubernetesapp"
          },
          "kato.task.firstNotFoundRetry": -1,
          "outputs.manifestNamesByNamespace": {
            "test": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "optionalArtifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "dev",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "dev",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/statefulSet",
              "version": ""
            }
          ],
          "outputs.boundArtifacts": [],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "messages": [],
          "failedManifests": [],
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "test",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "frontend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "frontend",
                      "location": "test",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "daemonset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "daemonset",
                      "location": "test",
                      "type": "kubernetes/daemonSet",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "test",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "database",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "database",
                      "location": "test",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "test",
                      "type": "kubernetes/ingress",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend-security-policy",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend-security-policy",
                      "location": "test",
                      "type": "kubernetes/networkPolicy",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "test",
                      "type": "kubernetes/statefulSet",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "test",
                      "type": "kubernetes/deployment",
                      "version": ""
                    }
                  ],
                  "manifests": [
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "678b467e-5bde-433e-9864-181335e78ce8",
                        "resourceVersion": "32193",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "frontend",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "frontend",
                          "artifact.spinnaker.io/location": "test",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment frontend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "frontend",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "frontend",
                              "artifact.spinnaker.io/location": "test",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment frontend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "frontend",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "frontend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 1.0,
                        "readyReplicas": 1.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:23Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-12T04:49:23Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:21Z",
                            "message": "ReplicaSet \"frontend-ffd6c687b\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-12T04:49:23Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 1.0,
                        "availableReplicas": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "7e68e150-e5a1-4593-ae4b-f69ed95135b4",
                        "resourceVersion": "32267",
                        "creationTimestamp": "2025-08-12T04:49:22Z",
                        "name": "statefulset",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                          "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "StatefulSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "statefulset",
                              "artifact.spinnaker.io/location": "test",
                              "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                              "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "statefulset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 10.0,
                            "containers": [
                              {
                                "image": "registry.k8s.io/nginx-slim:0.24",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "nginx",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "name": "web",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "podManagementPolicy": "OrderedReady",
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "partition": 0.0
                          }
                        },
                        "replicas": 3.0,
                        "persistentVolumeClaimRetentionPolicy": {
                          "whenScaled": "Retain",
                          "whenDeleted": "Retain"
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "statefulset"
                          }
                        },
                        "minReadySeconds": 10.0,
                        "serviceName": ""
                      },
                      "status": {
                        "currentRevision": "statefulset-6b4d9fbf7",
                        "replicas": 3.0,
                        "updateRevision": "statefulset-6b4d9fbf7",
                        "readyReplicas": 3.0,
                        "collisionCount": 0.0,
                        "currentReplicas": 3.0,
                        "updatedReplicas": 3.0,
                        "availableReplicas": 3.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "f6bb19e8-4fba-4aa8-b430-277ffd670d20",
                        "resourceVersion": "32087",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "backend-security-policy",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend-security-policy",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"test\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                          "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "NetworkPolicy",
                      "spec": {
                        "ingress": [
                          {
                            "from": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "frontend"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 80.0
                              }
                            ]
                          }
                        ],
                        "podSelector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "policyTypes": ["Ingress", "Egress"],
                        "egress": [
                          {
                            "to": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "db"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 3306.0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "64abe180-cbe7-4172-afbd-c9019f530221",
                        "resourceVersion": "32191",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "database",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "database",
                          "artifact.spinnaker.io/location": "test",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment database",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "db",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "database",
                              "artifact.spinnaker.io/location": "test",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment database",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "db",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "mysql",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "database",
                                "resources": {},
                                "env": [
                                  {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "rootpassword"
                                  }
                                ],
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 3306.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 1.0,
                        "readyReplicas": 1.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:23Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-12T04:49:23Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:21Z",
                            "message": "ReplicaSet \"database-75668cf879\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-12T04:49:23Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 1.0,
                        "availableReplicas": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "d3ce9190-8efb-4157-8418-f79ab7b6b008",
                        "resourceVersion": "32086",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "backend",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/ingress",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                          "moniker.spinnaker.io/cluster": "ingress backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "Ingress",
                      "spec": {
                        "rules": [
                          {
                            "host": "backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "backend"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          },
                          {
                            "host": "api.backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "workload-service"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "uid": "2260befc-b56b-4d7a-b637-fa678ca08e88",
                        "resourceVersion": "32088",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "statefulset",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "statefulset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["None"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "statefulset"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "name": "web",
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "None"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "81841c4e-9458-4167-adbc-c13f9636cb55",
                        "resourceVersion": "32231",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "daemonset",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "daemonset",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"test\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                          "deprecated.daemonset.template.generation": "1",
                          "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "daemonset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "DaemonSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "daemonset",
                              "artifact.spinnaker.io/location": "test",
                              "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                              "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "daemonset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "daemonset",
                                "readinessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "resources": {
                                  "requests": {
                                    "memory": "64Mi",
                                    "cpu": "250m"
                                  },
                                  "limits": {
                                    "memory": "128Mi",
                                    "cpu": "500m"
                                  }
                                },
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": 0.0,
                            "maxUnavailable": 1.0
                          }
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "daemonset"
                          }
                        }
                      },
                      "status": {
                        "updatedNumberScheduled": 1.0,
                        "numberAvailable": 1.0,
                        "numberMisscheduled": 0.0,
                        "numberReady": 1.0,
                        "currentNumberScheduled": 1.0,
                        "desiredNumberScheduled": 1.0,
                        "observedGeneration": 1.0
                      }
                    },
                    {
                      "metadata": {
                        "uid": "ce04f2c1-182f-4c1f-9d81-b80b0ed12ea6",
                        "resourceVersion": "32083",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "backend",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "test",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["10.96.16.1"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "backend"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "10.96.16.1"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "910e9c83-4a43-4cca-b53b-cb70a260637f",
                        "resourceVersion": "32179",
                        "creationTimestamp": "2025-08-12T04:49:21Z",
                        "name": "backend",
                        "namespace": "test",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "test",
                          "deployment.kubernetes.io/revision": "1",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment backend",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "backend",
                              "artifact.spinnaker.io/location": "test",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment backend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "backend",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp",
                              "custom-label": "custom-value"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:1.27.3",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "backend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 2.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {
                        "replicas": 2.0,
                        "readyReplicas": 2.0,
                        "conditions": [
                          {
                            "reason": "MinimumReplicasAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:22Z",
                            "message": "Deployment has minimum availability.",
                            "type": "Available",
                            "lastUpdateTime": "2025-08-12T04:49:22Z",
                            "status": "True"
                          },
                          {
                            "reason": "NewReplicaSetAvailable",
                            "lastTransitionTime": "2025-08-12T04:49:21Z",
                            "message": "ReplicaSet \"backend-6c78fb8fbf\" has successfully progressed.",
                            "type": "Progressing",
                            "lastUpdateTime": "2025-08-12T04:49:22Z",
                            "status": "True"
                          }
                        ],
                        "updatedReplicas": 2.0,
                        "availableReplicas": 2.0,
                        "observedGeneration": 1.0
                      }
                    }
                  ],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "test": [
                      "ingress backend",
                      "deployment backend",
                      "daemonSet daemonset",
                      "statefulSet statefulset",
                      "deployment database",
                      "deployment frontend",
                      "service backend",
                      "networkPolicy backend-security-policy",
                      "service statefulset"
                    ]
                  },
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9XD8CP88QPSAR0YR84SGP",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesDeployManifestOperation"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Beginning deployment of manifests in account k8s-local ..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Sorting manifests by priority..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy order is: service backend, ingress backend, networkPolicy backend-security-policy, service statefulset, deployment backend, deployment frontend, deployment database, daemonSet daemonset, statefulSet statefulset"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in ingress backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest ingress backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in networkPolicy backend-security-policy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest networkPolicy backend-security-policy with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment frontend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment frontend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment database..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment database with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in daemonSet daemonset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest daemonSet daemonset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in statefulSet statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest statefulSet statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Checking if all requested artifacts were bound..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest ingress backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest ingress backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest networkPolicy backend-security-policy to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest networkPolicy backend-security-policy in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment frontend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment frontend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment database to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment database in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest daemonSet daemonset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest daemonSet daemonset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest statefulSet statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest statefulSet statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for all manifests in account k8s-local"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            },
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {},
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9XK7VDF8DCD2XCHCMPHDK",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesCleanupArtifactsOperation"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [
            {
              "metadata": {
                "generation": 1.0,
                "uid": "678b467e-5bde-433e-9864-181335e78ce8",
                "resourceVersion": "32193",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "frontend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"frontend-ffd6c687b\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "7e68e150-e5a1-4593-ae4b-f69ed95135b4",
                "resourceVersion": "32267",
                "creationTimestamp": "2025-08-12T04:49:22Z",
                "name": "statefulset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "currentRevision": "statefulset-6b4d9fbf7",
                "replicas": 3.0,
                "updateRevision": "statefulset-6b4d9fbf7",
                "readyReplicas": 3.0,
                "collisionCount": 0.0,
                "currentReplicas": 3.0,
                "updatedReplicas": 3.0,
                "availableReplicas": 3.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "f6bb19e8-4fba-4aa8-b430-277ffd670d20",
                "resourceVersion": "32087",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend-security-policy",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"test\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "64abe180-cbe7-4172-afbd-c9019f530221",
                "resourceVersion": "32191",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "database",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"database-75668cf879\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "d3ce9190-8efb-4157-8418-f79ab7b6b008",
                "resourceVersion": "32086",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "uid": "2260befc-b56b-4d7a-b637-fa678ca08e88",
                "resourceVersion": "32088",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "statefulset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "81841c4e-9458-4167-adbc-c13f9636cb55",
                "resourceVersion": "32231",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "daemonset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"test\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "updatedNumberScheduled": 1.0,
                "numberAvailable": 1.0,
                "numberMisscheduled": 0.0,
                "numberReady": 1.0,
                "currentNumberScheduled": 1.0,
                "desiredNumberScheduled": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "ce04f2c1-182f-4c1f-9d81-b80b0ed12ea6",
                "resourceVersion": "32083",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.16.1"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.16.1"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "910e9c83-4a43-4cca-b53b-cb70a260637f",
                "resourceVersion": "32179",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 2.0,
                "readyReplicas": 2.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:22Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:22Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"backend-6c78fb8fbf\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:22Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 2.0,
                "availableReplicas": 2.0,
                "observedGeneration": 1.0
              }
            }
          ],
          "kato.task.notFoundRetryCount": 0,
          "account": "k8s-local",
          "skipExpressionEvaluation": false,
          "kato.task.lastStatus": "SUCCEEDED"
        },
        "outputs": {
          "optionalArtifacts": [
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "dev",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "dev",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "dev",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "dev",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "requiredArtifacts": [],
          "outputs.createdArtifacts": [
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "test",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "test",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "test",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "test",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "outputs.manifestNamesByNamespace": {
            "test": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "outputs.boundArtifacts": [],
          "outputs.manifests": [
            {
              "metadata": {
                "generation": 1.0,
                "uid": "678b467e-5bde-433e-9864-181335e78ce8",
                "resourceVersion": "32193",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "frontend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"frontend-ffd6c687b\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "7e68e150-e5a1-4593-ae4b-f69ed95135b4",
                "resourceVersion": "32267",
                "creationTimestamp": "2025-08-12T04:49:22Z",
                "name": "statefulset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "currentRevision": "statefulset-6b4d9fbf7",
                "replicas": 3.0,
                "updateRevision": "statefulset-6b4d9fbf7",
                "readyReplicas": 3.0,
                "collisionCount": 0.0,
                "currentReplicas": 3.0,
                "updatedReplicas": 3.0,
                "availableReplicas": 3.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "f6bb19e8-4fba-4aa8-b430-277ffd670d20",
                "resourceVersion": "32087",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend-security-policy",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"test\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "64abe180-cbe7-4172-afbd-c9019f530221",
                "resourceVersion": "32191",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "database",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"test\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 1.0,
                "readyReplicas": 1.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:23Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"database-75668cf879\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:23Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 1.0,
                "availableReplicas": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "d3ce9190-8efb-4157-8418-f79ab7b6b008",
                "resourceVersion": "32086",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "uid": "2260befc-b56b-4d7a-b637-fa678ca08e88",
                "resourceVersion": "32088",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "statefulset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"test\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "81841c4e-9458-4167-adbc-c13f9636cb55",
                "resourceVersion": "32231",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "daemonset",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"test\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "updatedNumberScheduled": 1.0,
                "numberAvailable": 1.0,
                "numberMisscheduled": 0.0,
                "numberReady": 1.0,
                "currentNumberScheduled": 1.0,
                "desiredNumberScheduled": 1.0,
                "observedGeneration": 1.0
              }
            },
            {
              "metadata": {
                "uid": "ce04f2c1-182f-4c1f-9d81-b80b0ed12ea6",
                "resourceVersion": "32083",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.16.1"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.16.1"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "910e9c83-4a43-4cca-b53b-cb70a260637f",
                "resourceVersion": "32179",
                "creationTimestamp": "2025-08-12T04:49:21Z",
                "name": "backend",
                "namespace": "test",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "test",
                  "deployment.kubernetes.io/revision": "1",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"test\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"test\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "test",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {
                "replicas": 2.0,
                "readyReplicas": 2.0,
                "conditions": [
                  {
                    "reason": "MinimumReplicasAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:22Z",
                    "message": "Deployment has minimum availability.",
                    "type": "Available",
                    "lastUpdateTime": "2025-08-12T04:49:22Z",
                    "status": "True"
                  },
                  {
                    "reason": "NewReplicaSetAvailable",
                    "lastTransitionTime": "2025-08-12T04:49:21Z",
                    "message": "ReplicaSet \"backend-6c78fb8fbf\" has successfully progressed.",
                    "type": "Progressing",
                    "lastUpdateTime": "2025-08-12T04:49:22Z",
                    "status": "True"
                  }
                ],
                "updatedReplicas": 2.0,
                "availableReplicas": 2.0,
                "observedGeneration": 1.0
              }
            }
          ],
          "artifacts": [
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "test",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "test",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "test",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "test",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ]
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveDeploySourceManifestTask",
            "name": "resolveDeploySourceManifest",
            "startTime": 1754974303236,
            "endTime": 1754974303360,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.DeployManifestTask",
            "name": "deployManifest",
            "startTime": 1754974303422,
            "endTime": 1754974303541,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.MonitorDeployManifestTask",
            "name": "monitorDeploy",
            "startTime": 1754974303596,
            "endTime": 1754974308760,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974308815,
            "endTime": 1754974308937,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "5",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.WaitForManifestStableTask",
            "name": "waitForManifestToStabilize",
            "startTime": 1754974308996,
            "endTime": 1754974309499,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "6",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.artifacts.CleanupArtifactsTask",
            "name": "cleanupArtifacts",
            "startTime": 1754974309560,
            "endTime": 1754974309681,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "7",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorCleanup",
            "startTime": 1754974309747,
            "endTime": 1754974309865,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "8",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974309925,
            "endTime": 1754974310053,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "9",
            "implementingClass": "com.netflix.spinnaker.orca.pipeline.tasks.artifacts.BindProducedArtifactsTask",
            "name": "bindProducedArtifacts",
            "startTime": 1754974310109,
            "endTime": 1754974310234,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["1"]
      },
      {
        "id": "01K2E9X5Q45C5JCY2S211DYM1Y",
        "refId": "3",
        "type": "deployManifest",
        "name": "Deploy (Manifest)",
        "startTime": 1754974310351,
        "endTime": 1754974353713,
        "status": "SUCCEEDED",
        "context": {
          "deploy.account.name": "k8s-local",
          "outputs.createdArtifacts": [
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "prod",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "prod",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "prod",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "prod",
              "type": "kubernetes/statefulSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            }
          ],
          "namespaceOverride": "prod",
          "source": "text",
          "stableManifests": [
            {
              "manifestName": "ingress backend",
              "location": "prod"
            },
            {
              "manifestName": "deployment backend",
              "location": "prod"
            },
            {
              "manifestName": "deployment database",
              "location": "prod"
            },
            {
              "manifestName": "deployment frontend",
              "location": "prod"
            },
            {
              "manifestName": "service backend",
              "location": "prod"
            },
            {
              "manifestName": "networkPolicy backend-security-policy",
              "location": "prod"
            },
            {
              "manifestName": "service statefulset",
              "location": "prod"
            },
            {
              "manifestName": "daemonSet daemonset",
              "location": "prod"
            },
            {
              "manifestName": "statefulSet statefulset",
              "location": "prod"
            }
          ],
          "cloudProvider": "kubernetes",
          "kato.result.expected": false,
          "failureMessages": [],
          "trafficManagement": {
            "options": {
              "enableTraffic": false,
              "services": []
            },
            "enabled": false
          },
          "deploy.server.groups": {},
          "kato.last.task.id": {
            "id": "01K2E9YXND8BRD9WVYR94J1TZY"
          },
          "requiredArtifacts": [],
          "artifacts": [
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "prod",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "prod",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "prod",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "prod",
              "type": "kubernetes/statefulSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "prod",
              "type": "kubernetes/deployment",
              "version": ""
            }
          ],
          "kato.task.terminalRetryCount": 0,
          "moniker": {
            "app": "kubernetesapp"
          },
          "kato.task.firstNotFoundRetry": -1,
          "outputs.manifestNamesByNamespace": {
            "prod": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "optionalArtifacts": [
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "test",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "test",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "test",
              "type": "kubernetes/statefulSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "test",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "frontend",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "database",
              "location": "dev",
              "type": "kubernetes/deployment",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/service",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "daemonset",
              "location": "dev",
              "type": "kubernetes/daemonSet",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend",
              "location": "dev",
              "type": "kubernetes/ingress",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "backend-security-policy",
              "location": "dev",
              "type": "kubernetes/networkPolicy",
              "version": ""
            },
            {
              "customKind": false,
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              },
              "name": "statefulset",
              "location": "dev",
              "type": "kubernetes/statefulSet",
              "version": ""
            }
          ],
          "outputs.boundArtifacts": [],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "messages": [
            "'daemonSet daemonset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'daemonSet daemonset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize",
            "'statefulSet statefulset' in 'prod' for account k8s-local: waiting for manifest to stabilize"
          ],
          "failedManifests": [],
          "kato.tasks": [
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [
                    {
                      "customKind": false,
                      "reference": "frontend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "frontend",
                      "location": "prod",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "daemonset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "daemonset",
                      "location": "prod",
                      "type": "kubernetes/daemonSet",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend-security-policy",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend-security-policy",
                      "location": "prod",
                      "type": "kubernetes/networkPolicy",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "prod",
                      "type": "kubernetes/ingress",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "prod",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "statefulset",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "statefulset",
                      "location": "prod",
                      "type": "kubernetes/statefulSet",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "database",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "database",
                      "location": "prod",
                      "type": "kubernetes/deployment",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "prod",
                      "type": "kubernetes/service",
                      "version": ""
                    },
                    {
                      "customKind": false,
                      "reference": "backend",
                      "metadata": {
                        "account": "k8s-local"
                      },
                      "name": "backend",
                      "location": "prod",
                      "type": "kubernetes/deployment",
                      "version": ""
                    }
                  ],
                  "manifests": [
                    {
                      "metadata": {
                        "uid": "6820b91d-d33b-4de6-a37a-f50b20c30a9e",
                        "resourceVersion": "32440",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "backend",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["10.96.157.101"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "backend"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "10.96.157.101"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "f00a871f-097c-4eb0-aad0-6cdc45059cf7",
                        "resourceVersion": "32444",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "backend-security-policy",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend-security-policy",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"prod\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                          "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "NetworkPolicy",
                      "spec": {
                        "ingress": [
                          {
                            "from": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "frontend"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 80.0
                              }
                            ]
                          }
                        ],
                        "podSelector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "policyTypes": ["Ingress", "Egress"],
                        "egress": [
                          {
                            "to": [
                              {
                                "podSelector": {
                                  "matchLabels": {
                                    "role": "db"
                                  }
                                }
                              }
                            ],
                            "ports": [
                              {
                                "protocol": "TCP",
                                "port": 3306.0
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "metadata": {
                        "uid": "02fa767e-35b1-482c-a552-07330f2cba0d",
                        "resourceVersion": "32445",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "statefulset",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/service",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                          "moniker.spinnaker.io/cluster": "service statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "statefulset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "v1",
                      "kind": "Service",
                      "spec": {
                        "clusterIPs": ["None"],
                        "ipFamilies": ["IPv4"],
                        "ipFamilyPolicy": "SingleStack",
                        "sessionAffinity": "None",
                        "selector": {
                          "app": "statefulset"
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "port": 80.0,
                            "name": "web",
                            "targetPort": 80.0
                          }
                        ],
                        "type": "ClusterIP",
                        "internalTrafficPolicy": "Cluster",
                        "clusterIP": "None"
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "252a30fb-c3b3-403d-a2df-4d3bed585d25",
                        "resourceVersion": "32492",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "daemonset",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "daemonset",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"prod\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                          "deprecated.daemonset.template.generation": "1",
                          "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "daemonset",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "DaemonSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "daemonset",
                              "artifact.spinnaker.io/location": "prod",
                              "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                              "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "daemonset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "daemonset",
                                "readinessProbe": {
                                  "failureThreshold": 3.0,
                                  "periodSeconds": 10.0,
                                  "timeoutSeconds": 1.0,
                                  "successThreshold": 1.0,
                                  "initialDelaySeconds": 5.0,
                                  "httpGet": {
                                    "path": "/",
                                    "scheme": "HTTP",
                                    "port": 80.0
                                  }
                                },
                                "resources": {
                                  "requests": {
                                    "memory": "64Mi",
                                    "cpu": "250m"
                                  },
                                  "limits": {
                                    "memory": "128Mi",
                                    "cpu": "500m"
                                  }
                                },
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": 0.0,
                            "maxUnavailable": 1.0
                          }
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "daemonset"
                          }
                        }
                      },
                      "status": {
                        "numberMisscheduled": 0.0,
                        "numberReady": 0.0,
                        "currentNumberScheduled": 0.0,
                        "desiredNumberScheduled": 0.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "e0ac1d9e-3150-4e18-a723-b50104f910ff",
                        "resourceVersion": "32448",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "backend",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment backend",
                          "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app": "backend",
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "backend",
                              "artifact.spinnaker.io/location": "prod",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment backend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "backend",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp",
                              "custom-label": "custom-value"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx:1.27.3",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "backend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 2.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "backend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {}
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "0abdcde0-2c83-4700-bff4-5e405e754780",
                        "resourceVersion": "32466",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "frontend",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "frontend",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment frontend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "frontend",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "frontend",
                              "artifact.spinnaker.io/location": "prod",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment frontend",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "frontend",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "nginx",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "frontend",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {}
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "bfd7d071-82cd-4fb2-a902-18b268b4d311",
                        "resourceVersion": "32479",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "database",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "database",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/deployment",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                          "moniker.spinnaker.io/cluster": "deployment database",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "role": "db",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "Deployment",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "database",
                              "artifact.spinnaker.io/location": "prod",
                              "artifact.spinnaker.io/type": "kubernetes/deployment",
                              "moniker.spinnaker.io/cluster": "deployment database",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "role": "db",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 30.0,
                            "containers": [
                              {
                                "image": "mysql",
                                "imagePullPolicy": "Always",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "database",
                                "resources": {},
                                "env": [
                                  {
                                    "name": "MYSQL_ROOT_PASSWORD",
                                    "value": "rootpassword"
                                  }
                                ],
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "containerPort": 3306.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "replicas": 1.0,
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        },
                        "strategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "maxSurge": "25%",
                            "maxUnavailable": "25%"
                          }
                        },
                        "progressDeadlineSeconds": 600.0
                      },
                      "status": {}
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "0cab16d4-2cb3-4a70-9965-cf4372edcdb7",
                        "resourceVersion": "32500",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "statefulset",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "statefulset",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                          "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "apps/v1",
                      "kind": "StatefulSet",
                      "spec": {
                        "template": {
                          "metadata": {
                            "annotations": {
                              "artifact.spinnaker.io/version": "",
                              "artifact.spinnaker.io/name": "statefulset",
                              "artifact.spinnaker.io/location": "prod",
                              "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                              "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                              "moniker.spinnaker.io/application": "kubernetesapp"
                            },
                            "labels": {
                              "app": "statefulset",
                              "app.kubernetes.io/managed-by": "spinnaker",
                              "app.kubernetes.io/name": "kubernetesapp"
                            }
                          },
                          "spec": {
                            "dnsPolicy": "ClusterFirst",
                            "terminationGracePeriodSeconds": 10.0,
                            "containers": [
                              {
                                "image": "registry.k8s.io/nginx-slim:0.24",
                                "imagePullPolicy": "IfNotPresent",
                                "terminationMessagePolicy": "File",
                                "terminationMessagePath": "/dev/termination-log",
                                "name": "nginx",
                                "resources": {},
                                "ports": [
                                  {
                                    "protocol": "TCP",
                                    "name": "web",
                                    "containerPort": 80.0
                                  }
                                ]
                              }
                            ],
                            "securityContext": {},
                            "restartPolicy": "Always",
                            "schedulerName": "default-scheduler"
                          }
                        },
                        "podManagementPolicy": "OrderedReady",
                        "updateStrategy": {
                          "type": "RollingUpdate",
                          "rollingUpdate": {
                            "partition": 0.0
                          }
                        },
                        "replicas": 3.0,
                        "persistentVolumeClaimRetentionPolicy": {
                          "whenScaled": "Retain",
                          "whenDeleted": "Retain"
                        },
                        "revisionHistoryLimit": 10.0,
                        "selector": {
                          "matchLabels": {
                            "app": "statefulset"
                          }
                        },
                        "minReadySeconds": 10.0,
                        "serviceName": ""
                      },
                      "status": {
                        "replicas": 0.0,
                        "availableReplicas": 0.0
                      }
                    },
                    {
                      "metadata": {
                        "generation": 1.0,
                        "uid": "b3fbee15-ef2e-4ec3-9e39-5c503bb5fc9a",
                        "resourceVersion": "32443",
                        "creationTimestamp": "2025-08-12T04:51:51Z",
                        "name": "backend",
                        "namespace": "prod",
                        "annotations": {
                          "artifact.spinnaker.io/version": "",
                          "artifact.spinnaker.io/name": "backend",
                          "artifact.spinnaker.io/location": "prod",
                          "artifact.spinnaker.io/type": "kubernetes/ingress",
                          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                          "moniker.spinnaker.io/cluster": "ingress backend",
                          "moniker.spinnaker.io/application": "kubernetesapp"
                        },
                        "labels": {
                          "app.kubernetes.io/managed-by": "spinnaker",
                          "app.kubernetes.io/name": "kubernetesapp"
                        }
                      },
                      "apiVersion": "networking.k8s.io/v1",
                      "kind": "Ingress",
                      "spec": {
                        "rules": [
                          {
                            "host": "backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "backend"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          },
                          {
                            "host": "api.backend.com",
                            "http": {
                              "paths": [
                                {
                                  "path": "/",
                                  "backend": {
                                    "service": {
                                      "port": {
                                        "number": 80.0
                                      },
                                      "name": "workload-service"
                                    }
                                  },
                                  "pathType": "Prefix"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "status": {
                        "loadBalancer": {}
                      }
                    }
                  ],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {
                    "prod": [
                      "ingress backend",
                      "deployment backend",
                      "daemonSet daemonset",
                      "statefulSet statefulset",
                      "deployment database",
                      "deployment frontend",
                      "service backend",
                      "networkPolicy backend-security-policy",
                      "service statefulset"
                    ]
                  },
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9XM8JEGYADXCJNP90GA2W",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesDeployManifestOperation"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Beginning deployment of manifests in account k8s-local ..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Sorting manifests by priority..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy order is: service backend, ingress backend, networkPolicy backend-security-policy, service statefulset, deployment backend, deployment frontend, deployment database, daemonSet daemonset, statefulSet statefulset"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in ingress backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest ingress backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in networkPolicy backend-security-policy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest networkPolicy backend-security-policy with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in service statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest service statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment backend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment backend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment frontend..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment frontend with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in deployment database..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest deployment database with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in daemonSet daemonset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest daemonSet daemonset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Binding artifacts in statefulSet statefulset..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Bound artifacts: []..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Annotating manifest statefulSet statefulset with artifact, relationships & moniker..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Checking if all requested artifacts were bound..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for ingress..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest ingress backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest ingress backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for networkPolicy..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest networkPolicy backend-security-policy to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest networkPolicy backend-security-policy in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for service..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest service statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest service statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment backend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment backend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment frontend to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment frontend in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for deployment..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest deployment database to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest deployment database in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for daemonSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest daemonSet daemonset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest daemonSet daemonset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Finding deployer for statefulSet..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Submitting manifest statefulSet statefulset to kubernetes master..."
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for manifest statefulSet statefulset in account k8s-local"
                },
                {
                  "phase": "DEPLOY_KUBERNETES_MANIFEST",
                  "status": "Deploy manifest task completed successfully for all manifests in account k8s-local"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            },
            {
              "outputs": [],
              "resultObjects": [
                {
                  "createdArtifacts": [],
                  "failureMessages": [],
                  "manifestNamesByNamespace": {},
                  "boundArtifacts": []
                }
              ],
              "id": "01K2E9YXND8BRD9WVYR94J1TZY",
              "history": [
                {
                  "phase": "ORCHESTRATION",
                  "status": "Initializing Orchestration Task"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Processing op: KubernetesCleanupArtifactsOperation"
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                },
                {
                  "phase": "ORCHESTRATION",
                  "status": "Orchestration completed."
                }
              ],
              "status": {
                "retryable": false,
                "completed": true,
                "failed": false
              }
            }
          ],
          "outputs.manifests": [
            {
              "metadata": {
                "uid": "6820b91d-d33b-4de6-a37a-f50b20c30a9e",
                "resourceVersion": "32440",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.157.101"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.157.101"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "f00a871f-097c-4eb0-aad0-6cdc45059cf7",
                "resourceVersion": "32444",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend-security-policy",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"prod\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "uid": "02fa767e-35b1-482c-a552-07330f2cba0d",
                "resourceVersion": "32445",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "statefulset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "252a30fb-c3b3-403d-a2df-4d3bed585d25",
                "resourceVersion": "32492",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "daemonset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"prod\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "numberMisscheduled": 0.0,
                "numberReady": 0.0,
                "currentNumberScheduled": 0.0,
                "desiredNumberScheduled": 0.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "e0ac1d9e-3150-4e18-a723-b50104f910ff",
                "resourceVersion": "32448",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0abdcde0-2c83-4700-bff4-5e405e754780",
                "resourceVersion": "32466",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "frontend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "bfd7d071-82cd-4fb2-a902-18b268b4d311",
                "resourceVersion": "32479",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "database",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0cab16d4-2cb3-4a70-9965-cf4372edcdb7",
                "resourceVersion": "32500",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "statefulset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "replicas": 0.0,
                "availableReplicas": 0.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "b3fbee15-ef2e-4ec3-9e39-5c503bb5fc9a",
                "resourceVersion": "32443",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            }
          ],
          "kato.task.notFoundRetryCount": 0,
          "account": "k8s-local",
          "skipExpressionEvaluation": false,
          "kato.task.lastStatus": "SUCCEEDED"
        },
        "outputs": {
          "optionalArtifacts": [
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "test",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "test",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "test",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "test",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "test",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "test",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "dev",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "dev",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "dev",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "dev",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "dev",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "dev",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "manifests": [
            {
              "metadata": {
                "name": "backend",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                },
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "backend",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "name": "backend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 2,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend",
                "labels": {
                  "app": "backend"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "backend"
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "frontend",
                "namespace": "default",
                "labels": {
                  "role": "frontend"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "frontend"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx",
                        "name": "frontend",
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "database",
                "namespace": "default",
                "labels": {
                  "role": "db"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "role": "db"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "mysql",
                        "name": "database",
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "containerPort": 3306
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "backend-security-policy",
                "namespace": "default",
                "annotations": {
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "daemonset",
                "labels": {
                  "app": "daemonset"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "daemonset"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "livenessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "name": "daemonset",
                        "readinessProbe": {
                          "periodSeconds": 10,
                          "initialDelaySeconds": 5,
                          "httpGet": {
                            "path": "/",
                            "port": 80
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              }
            },
            {
              "metadata": {
                "name": "statefulset",
                "labels": {
                  "app": "statefulset"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "port": 80,
                    "name": "web"
                  }
                ],
                "clusterIP": "None"
              }
            },
            {
              "metadata": {
                "name": "statefulset"
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "statefulset"
                    }
                  },
                  "spec": {
                    "terminationGracePeriodSeconds": 10,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "name": "nginx",
                        "ports": [
                          {
                            "name": "web",
                            "containerPort": 80
                          }
                        ]
                      }
                    ]
                  }
                },
                "replicas": 3,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10
              }
            }
          ],
          "requiredArtifacts": [],
          "outputs.createdArtifacts": [
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "prod",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "prod",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "prod",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "prod",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "prod",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "prod",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ],
          "outputs.manifestNamesByNamespace": {
            "prod": [
              "ingress backend",
              "deployment backend",
              "daemonSet daemonset",
              "statefulSet statefulset",
              "deployment database",
              "deployment frontend",
              "service backend",
              "networkPolicy backend-security-policy",
              "service statefulset"
            ]
          },
          "outputs.boundArtifacts": [],
          "outputs.manifests": [
            {
              "metadata": {
                "uid": "6820b91d-d33b-4de6-a37a-f50b20c30a9e",
                "resourceVersion": "32440",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"backend\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["10.96.157.101"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "backend"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "10.96.157.101"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "f00a871f-097c-4eb0-aad0-6cdc45059cf7",
                "resourceVersion": "32444",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend-security-policy",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend-security-policy",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/networkPolicy",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"NetworkPolicy\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend-security-policy\",\"artifact.spinnaker.io/type\":\"kubernetes/networkPolicy\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eApplication Name:\\u003c/span\\u003e {{ app }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"networkPolicy backend-security-policy\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend-security-policy\",\"namespace\":\"prod\"},\"spec\":{\"egress\":[{\"ports\":[{\"port\":3306,\"protocol\":\"TCP\"}],\"to\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"db\"}}}]}],\"ingress\":[{\"from\":[{\"podSelector\":{\"matchLabels\":{\"role\":\"frontend\"}}}],\"ports\":[{\"port\":80,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchLabels\":{\"app\":\"backend\"}},\"policyTypes\":[\"Ingress\",\"Egress\"]}}\n",
                  "moniker.spinnaker.io/cluster": "networkPolicy backend-security-policy",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span>Account:</span> {{ account }}</div>\n  <div class=\"item\"><span>Application Name:</span> {{ app }}</div>\n  <div class=\"item\"><span>Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "NetworkPolicy",
              "spec": {
                "ingress": [
                  {
                    "from": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "frontend"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 80.0
                      }
                    ]
                  }
                ],
                "podSelector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "policyTypes": ["Ingress", "Egress"],
                "egress": [
                  {
                    "to": [
                      {
                        "podSelector": {
                          "matchLabels": {
                            "role": "db"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "protocol": "TCP",
                        "port": 3306.0
                      }
                    ]
                  }
                ]
              }
            },
            {
              "metadata": {
                "uid": "02fa767e-35b1-482c-a552-07330f2cba0d",
                "resourceVersion": "32445",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "statefulset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/service",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/service\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"service statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"clusterIP\":\"None\",\"ports\":[{\"name\":\"web\",\"port\":80}],\"selector\":{\"app\":\"statefulset\"}}}\n",
                  "moniker.spinnaker.io/cluster": "service statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "statefulset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "v1",
              "kind": "Service",
              "spec": {
                "clusterIPs": ["None"],
                "ipFamilies": ["IPv4"],
                "ipFamilyPolicy": "SingleStack",
                "sessionAffinity": "None",
                "selector": {
                  "app": "statefulset"
                },
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 80.0,
                    "name": "web",
                    "targetPort": 80.0
                  }
                ],
                "type": "ClusterIP",
                "internalTrafficPolicy": "Cluster",
                "clusterIP": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "252a30fb-c3b3-403d-a2df-4d3bed585d25",
                "resourceVersion": "32492",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "daemonset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "daemonset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"daemonset\",\"namespace\":\"prod\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"daemonset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"daemonset\",\"artifact.spinnaker.io/type\":\"kubernetes/daemonSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"daemonSet daemonset\"},\"labels\":{\"app\":\"daemonset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"name\":\"daemonset\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"64Mi\"}}}]}}}}\n",
                  "deprecated.daemonset.template.generation": "1",
                  "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "daemonset",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "DaemonSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "daemonset",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/daemonSet",
                      "moniker.spinnaker.io/cluster": "daemonSet daemonset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "daemonset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:latest",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "daemonset",
                        "readinessProbe": {
                          "failureThreshold": 3.0,
                          "periodSeconds": 10.0,
                          "timeoutSeconds": 1.0,
                          "successThreshold": 1.0,
                          "initialDelaySeconds": 5.0,
                          "httpGet": {
                            "path": "/",
                            "scheme": "HTTP",
                            "port": 80.0
                          }
                        },
                        "resources": {
                          "requests": {
                            "memory": "64Mi",
                            "cpu": "250m"
                          },
                          "limits": {
                            "memory": "128Mi",
                            "cpu": "500m"
                          }
                        },
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": 0.0,
                    "maxUnavailable": 1.0
                  }
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "daemonset"
                  }
                }
              },
              "status": {
                "numberMisscheduled": 0.0,
                "numberReady": 0.0,
                "currentNumberScheduled": 0.0,
                "desiredNumberScheduled": 0.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "e0ac1d9e-3150-4e18-a723-b50104f910ff",
                "resourceVersion": "32448",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"deployment-info.details.html.spinnaker.io\":\"\\u003cdl class=\\\"dl-horizontal dl-narrow\\\"\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eAccount:\\u003c/span\\u003e {{ account }}\\u003c/div\\u003e\\n  \\u003cdiv class=\\\"item\\\"\\u003e\\u003cspan class=\\\"label-text\\\"\\u003eDisplay Name:\\u003c/span\\u003e {{ displayName }}\\u003c/div\\u003e\\n\\u003c/dl\\u003e\\n\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"backend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment backend\"},\"labels\":{\"app\":\"backend\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"custom-label\":\"custom-value\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:1.27.3\",\"name\":\"backend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment backend",
                  "deployment-info.details.html.spinnaker.io": "<dl class=\"dl-horizontal dl-narrow\">\n  <div class=\"item\"><span class=\"label-text\">Account:</span> {{ account }}</div>\n  <div class=\"item\"><span class=\"label-text\">Display Name:</span> {{ displayName }}</div>\n</dl>\n",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app": "backend",
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "backend",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment backend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "backend",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp",
                      "custom-label": "custom-value"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx:1.27.3",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "backend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 2.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "backend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0abdcde0-2c83-4700-bff4-5e405e754780",
                "resourceVersion": "32466",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "frontend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "frontend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"frontend\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"frontend\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment frontend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"frontend\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"frontend\",\"ports\":[{\"containerPort\":80}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment frontend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "frontend",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "frontend",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment frontend",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "frontend",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "nginx",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "frontend",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "frontend"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "bfd7d071-82cd-4fb2-a902-18b268b4d311",
                "resourceVersion": "32479",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "database",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "database",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/deployment",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"},\"name\":\"database\",\"namespace\":\"prod\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"role\":\"db\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"database\",\"artifact.spinnaker.io/type\":\"kubernetes/deployment\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"deployment database\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\",\"role\":\"db\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MYSQL_ROOT_PASSWORD\",\"value\":\"rootpassword\"}],\"image\":\"mysql\",\"name\":\"database\",\"ports\":[{\"containerPort\":3306}]}]}}}}\n",
                  "moniker.spinnaker.io/cluster": "deployment database",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "role": "db",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "database",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/deployment",
                      "moniker.spinnaker.io/cluster": "deployment database",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "role": "db",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 30.0,
                    "containers": [
                      {
                        "image": "mysql",
                        "imagePullPolicy": "Always",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "database",
                        "resources": {},
                        "env": [
                          {
                            "name": "MYSQL_ROOT_PASSWORD",
                            "value": "rootpassword"
                          }
                        ],
                        "ports": [
                          {
                            "protocol": "TCP",
                            "containerPort": 3306.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "replicas": 1.0,
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "role": "db"
                  }
                },
                "strategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                  }
                },
                "progressDeadlineSeconds": 600.0
              },
              "status": {}
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "0cab16d4-2cb3-4a70-9965-cf4372edcdb7",
                "resourceVersion": "32500",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "statefulset",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "statefulset",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"statefulset\",\"namespace\":\"prod\"},\"spec\":{\"minReadySeconds\":10,\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"statefulset\"}},\"template\":{\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"statefulset\",\"artifact.spinnaker.io/type\":\"kubernetes/statefulSet\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"statefulSet statefulset\"},\"labels\":{\"app\":\"statefulset\",\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"}},\"spec\":{\"containers\":[{\"image\":\"registry.k8s.io/nginx-slim:0.24\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80,\"name\":\"web\"}]}],\"terminationGracePeriodSeconds\":10}}}}\n",
                  "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "apps/v1",
              "kind": "StatefulSet",
              "spec": {
                "template": {
                  "metadata": {
                    "annotations": {
                      "artifact.spinnaker.io/version": "",
                      "artifact.spinnaker.io/name": "statefulset",
                      "artifact.spinnaker.io/location": "prod",
                      "artifact.spinnaker.io/type": "kubernetes/statefulSet",
                      "moniker.spinnaker.io/cluster": "statefulSet statefulset",
                      "moniker.spinnaker.io/application": "kubernetesapp"
                    },
                    "labels": {
                      "app": "statefulset",
                      "app.kubernetes.io/managed-by": "spinnaker",
                      "app.kubernetes.io/name": "kubernetesapp"
                    }
                  },
                  "spec": {
                    "dnsPolicy": "ClusterFirst",
                    "terminationGracePeriodSeconds": 10.0,
                    "containers": [
                      {
                        "image": "registry.k8s.io/nginx-slim:0.24",
                        "imagePullPolicy": "IfNotPresent",
                        "terminationMessagePolicy": "File",
                        "terminationMessagePath": "/dev/termination-log",
                        "name": "nginx",
                        "resources": {},
                        "ports": [
                          {
                            "protocol": "TCP",
                            "name": "web",
                            "containerPort": 80.0
                          }
                        ]
                      }
                    ],
                    "securityContext": {},
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler"
                  }
                },
                "podManagementPolicy": "OrderedReady",
                "updateStrategy": {
                  "type": "RollingUpdate",
                  "rollingUpdate": {
                    "partition": 0.0
                  }
                },
                "replicas": 3.0,
                "persistentVolumeClaimRetentionPolicy": {
                  "whenScaled": "Retain",
                  "whenDeleted": "Retain"
                },
                "revisionHistoryLimit": 10.0,
                "selector": {
                  "matchLabels": {
                    "app": "statefulset"
                  }
                },
                "minReadySeconds": 10.0,
                "serviceName": ""
              },
              "status": {
                "replicas": 0.0,
                "availableReplicas": 0.0
              }
            },
            {
              "metadata": {
                "generation": 1.0,
                "uid": "b3fbee15-ef2e-4ec3-9e39-5c503bb5fc9a",
                "resourceVersion": "32443",
                "creationTimestamp": "2025-08-12T04:51:51Z",
                "name": "backend",
                "namespace": "prod",
                "annotations": {
                  "artifact.spinnaker.io/version": "",
                  "artifact.spinnaker.io/name": "backend",
                  "artifact.spinnaker.io/location": "prod",
                  "artifact.spinnaker.io/type": "kubernetes/ingress",
                  "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"artifact.spinnaker.io/location\":\"prod\",\"artifact.spinnaker.io/name\":\"backend\",\"artifact.spinnaker.io/type\":\"kubernetes/ingress\",\"artifact.spinnaker.io/version\":\"\",\"moniker.spinnaker.io/application\":\"kubernetesapp\",\"moniker.spinnaker.io/cluster\":\"ingress backend\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"spinnaker\",\"app.kubernetes.io/name\":\"kubernetesapp\"},\"name\":\"backend\",\"namespace\":\"prod\"},\"spec\":{\"rules\":[{\"host\":\"backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"backend\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}},{\"host\":\"api.backend.com\",\"http\":{\"paths\":[{\"backend\":{\"service\":{\"name\":\"workload-service\",\"port\":{\"number\":80}}},\"path\":\"/\",\"pathType\":\"Prefix\"}]}}]}}\n",
                  "moniker.spinnaker.io/cluster": "ingress backend",
                  "moniker.spinnaker.io/application": "kubernetesapp"
                },
                "labels": {
                  "app.kubernetes.io/managed-by": "spinnaker",
                  "app.kubernetes.io/name": "kubernetesapp"
                }
              },
              "apiVersion": "networking.k8s.io/v1",
              "kind": "Ingress",
              "spec": {
                "rules": [
                  {
                    "host": "backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "backend"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  },
                  {
                    "host": "api.backend.com",
                    "http": {
                      "paths": [
                        {
                          "path": "/",
                          "backend": {
                            "service": {
                              "port": {
                                "number": 80.0
                              },
                              "name": "workload-service"
                            }
                          },
                          "pathType": "Prefix"
                        }
                      ]
                    }
                  }
                ]
              },
              "status": {
                "loadBalancer": {}
              }
            }
          ],
          "artifacts": [
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "frontend",
              "version": "",
              "location": "prod",
              "reference": "frontend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/daemonSet",
              "customKind": false,
              "name": "daemonset",
              "version": "",
              "location": "prod",
              "reference": "daemonset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/networkPolicy",
              "customKind": false,
              "name": "backend-security-policy",
              "version": "",
              "location": "prod",
              "reference": "backend-security-policy",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/ingress",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "prod",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/statefulSet",
              "customKind": false,
              "name": "statefulset",
              "version": "",
              "location": "prod",
              "reference": "statefulset",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "database",
              "version": "",
              "location": "prod",
              "reference": "database",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/service",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            },
            {
              "type": "kubernetes/deployment",
              "customKind": false,
              "name": "backend",
              "version": "",
              "location": "prod",
              "reference": "backend",
              "metadata": {
                "account": "k8s-local"
              }
            }
          ]
        },
        "tasks": [
          {
            "id": "1",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.ResolveDeploySourceManifestTask",
            "name": "resolveDeploySourceManifest",
            "startTime": 1754974310412,
            "endTime": 1754974310543,
            "status": "SUCCEEDED",
            "stageStart": true,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "2",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.DeployManifestTask",
            "name": "deployManifest",
            "startTime": 1754974310599,
            "endTime": 1754974310715,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "3",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.MonitorDeployManifestTask",
            "name": "monitorDeploy",
            "startTime": 1754974310769,
            "endTime": 1754974315939,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "4",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974316010,
            "endTime": 1754974316121,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "5",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.WaitForManifestStableTask",
            "name": "waitForManifestToStabilize",
            "startTime": 1754974316180,
            "endTime": 1754974352928,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "6",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.artifacts.CleanupArtifactsTask",
            "name": "cleanupArtifacts",
            "startTime": 1754974352988,
            "endTime": 1754974353100,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "7",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.MonitorKatoTask",
            "name": "monitorCleanup",
            "startTime": 1754974353161,
            "endTime": 1754974353280,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "8",
            "implementingClass": "com.netflix.spinnaker.orca.clouddriver.tasks.manifest.PromoteManifestKatoOutputsTask",
            "name": "promoteOutputs",
            "startTime": 1754974353346,
            "endTime": 1754974353468,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": false,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          },
          {
            "id": "9",
            "implementingClass": "com.netflix.spinnaker.orca.pipeline.tasks.artifacts.BindProducedArtifactsTask",
            "name": "bindProducedArtifacts",
            "startTime": 1754974353528,
            "endTime": 1754974353653,
            "status": "SUCCEEDED",
            "stageStart": false,
            "stageEnd": true,
            "loopStart": false,
            "loopEnd": false,
            "taskExceptionDetails": {}
          }
        ],
        "requisiteStageRefIds": ["2"]
      }
    ],
    "startTime": 1754974295822,
    "endTime": 1754974353777,
    "status": "SUCCEEDED",
    "authentication": {
      "user": "anonymous",
      "allowedAccounts": [
        "docker-registry-spinnaker",
        "k8s-local",
        "docker-registry-clouddriver",
        "docker-registry-orca",
        "docker-registry-echo"
      ]
    },
    "origin": "api",
    "trigger": {
      "type": "manual",
      "user": "anonymous",
      "parameters": {},
      "artifacts": [],
      "notifications": [],
      "rebake": false,
      "dryRun": false,
      "strategy": false,
      "resolvedExpectedArtifacts": [],
      "expectedArtifacts": [],
      "executionId": "01K2E9X5PJZJC5GAE8METBZXS9",
      "eventId": "c7eedd41-8d72-4df9-9471-917c5980e9a8",
      "enabled": false,
      "preferred": false
    },
    "pipelineConfigId": "0583a83a-45d3-43a7-821e-474fc238e2a4",
    "notifications": [],
    "initialConfig": {},
    "systemNotifications": [],
    "spelEvaluator": "v4",
    "templateVariables": {}
  }
]
